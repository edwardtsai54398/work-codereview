{"version":3,"file":"js/721.13b0b3e5.js","mappings":"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","sources":["webpack://inefi_cli/./src/views/deviceManagement/GroupMobileView.vue","webpack://inefi_cli/./src/views/deviceManagement/GroupMobileView.vue?6718"],"sourcesContent":["<script setup>\r\nimport { ArrowRight } from \"@element-plus/icons-vue\";\r\nimport { ArrowRightBold } from \"@element-plus/icons-vue\";\r\nimport { Search } from \"@element-plus/icons-vue\";\r\nimport { ref } from \"vue\";\r\nimport { reactive } from \"vue\";\r\nimport { watch } from \"vue\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst searchType = ref(\"\");\r\nconst searchText = ref(\"\");\r\nconst searchInputFocus = ref(false);\r\nconst treeDrawerOpen = ref(true);\r\nconst searchOverlayOpen = ref(false);\r\n\r\n\r\nconst groupTreeData = ref([]);\r\n// let url = 'https://fakestoreapi.com/products/1'\r\nlet url = \"/data/group_tree.json\";\r\nfunction getTreeData() {\r\n    axios\r\n        .get(url)\r\n        .then((res) => {\r\n            let inefiData = res.data;\r\n            groupTreeData.value = [...orgnizeTreeData(inefiData.result)];\r\n        })\r\n        .catch((err) => {\r\n            console.log(err);\r\n        });\r\n}\r\n\r\nfunction orgnizeTreeData(data) {\r\n    data.forEach((item) => {\r\n        item.slaveGroupName = item.masterGroupName;\r\n        item.slaveGroupUUID = item.masterGroupUUID;\r\n        item.slaveGroupId = item.masterGroupId;\r\n    });\r\n\r\n    return data;\r\n}\r\n\r\ngetTreeData();\r\nconst defaultProps = reactive({\r\n    label: \"slaveGroupName\",\r\n    children: \"subgroup\",\r\n});\r\n\r\n//一進來先抓store.state.checkSlaveGroupId\r\n//找不到群組跳通知\r\nimport store from \"@/store\";\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nconst treeRef = ref();\r\n\r\nlet group = store.state.checkSlaveGroup;\r\n\r\nsetTimeout(() => {\r\n    if (group !== \"\") {\r\n        let node = treeRef.value.getNode(group.slaveGroupId);\r\n        console.log(\"setTimeout\", node);\r\n        if (!node) {\r\n            ElMessage({\r\n                message: `找不到群組${node.data.slaveGroupName}`,\r\n                type: \"warning\",\r\n            });\r\n        } else {\r\n            showNodeData(node);\r\n        }\r\n    }\r\n}, 1);\r\n\r\nwatch(treeRef, () => {\r\n    treeDrawerOpen.value = false;\r\n});\r\nsetTimeout(() => {\r\n    groupTreeData.value.forEach((group) => {\r\n        let node = treeRef.value.getNode(group.slaveGroupId);\r\n        groupChildren.push(node);\r\n    });\r\n}, 2);\r\n//node變化\r\nconst breadCrumbList = reactive([]);\r\nconst groupChildren = reactive([]);\r\nconst deviceResult = ref([]);\r\nconst currentNode = ref(\"\");\r\n\r\nfunction showNodeData(node) {\r\n    breadCrumbList.length = 0;\r\n    clearResult();\r\n    if (node.nodeSlaveGroupId) {\r\n        console.log(node.nodeSlaveGroupId);\r\n        node = treeRef.value.getNode(node.nodeSlaveGroupId);\r\n        console.log(node);\r\n    } else if (node.device) {\r\n        deviceResult.value = node.device;\r\n        let id = node.breadCrumb[node.breadCrumb.length - 1].slaveGroupId;\r\n        console.log(id);\r\n        node = treeRef.value.getNode(id);\r\n    }\r\n\r\n    function pushBreadcrumb(node) {\r\n        if (node.level === 0) return;\r\n        let parentNode = node.parent;\r\n        breadCrumbList.push(node);\r\n        if (parentNode.level === 0) {\r\n            breadCrumbList.reverse();\r\n        } else {\r\n            pushBreadcrumb(parentNode);\r\n        }\r\n    }\r\n    pushBreadcrumb(node);\r\n\r\n    function setGroupChildren(node) {\r\n        groupChildren.length = 0;\r\n        if (node.childNodes.length) {\r\n            node.childNodes.forEach((child) => {\r\n                groupChildren.push(child);\r\n            });\r\n        }\r\n        if (node.data.devices) {\r\n            deviceResult.value = node.data.devices;\r\n        }\r\n    }\r\n    setGroupChildren(node);\r\n\r\n    //展開node\r\n    function expandTree(node) {\r\n        if (node.level !== 0) {\r\n            node.parent.expanded = true;\r\n            expandTree(node.parent);\r\n        }\r\n    }\r\n    expandTree(node);\r\n    if (node.level !== 0) {\r\n        currentNode.value = node.data;\r\n    }\r\n}\r\n\r\n//搜尋群組\r\nconst searchResult = ref([]);\r\nfunction searchGroupData(treeData, parentItem = []) {\r\n    let results = [];\r\n\r\n    if (Array.isArray(treeData)) {\r\n        treeData.forEach((item) => {\r\n            if (searchType.value === \"device\") {\r\n                let items = { breadCrumb: [...parentItem, item] };\r\n                if (item.subgroup) {\r\n                    const subResult = searchGroupData(\r\n                        item.subgroup,\r\n                        items.breadCrumb\r\n                    );\r\n                    results.push(...subResult);\r\n                } else if (item.devices) {\r\n                    const deviceResult = item.devices.filter((device) => {\r\n                        return device.deviceName\r\n                            .toLowerCase()\r\n                            .includes(searchText.value.toLowerCase());\r\n                    });\r\n                    if (deviceResult.length) {\r\n                        let Items = [];\r\n                        deviceResult.forEach((device) => {\r\n                            let item = { breadCrumb: [] };\r\n                            item.breadCrumb = items.breadCrumb;\r\n                            item.device = device;\r\n                            Items.push(item);\r\n                        });\r\n                        results.push(...Items);\r\n                    }\r\n                }\r\n            } else {\r\n                let items = { breadCrumb: [...parentItem, item] };\r\n                if (\r\n                    item.slaveGroupName\r\n                        .toLowerCase()\r\n                        .includes(searchText.value.toLowerCase())\r\n                ) {\r\n                    items.nodeSlaveGroupId = item.slaveGroupId;\r\n                    results.push(items);\r\n                }\r\n                if (item.subgroup) {\r\n                    const subResult = searchGroupData(\r\n                        item.subgroup,\r\n                        items.breadCrumb\r\n                    );\r\n                    results.push(...subResult);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (parentItem.length > 0) {\r\n        return results;\r\n    } else {\r\n        searchResult.value = results;\r\n    }\r\n}\r\n\r\nfunction clearResult() {\r\n    searchResult.value = [];\r\n    searchText.value = \"\";\r\n    deviceResult.value = [];\r\n    currentNode.value = \"\";\r\n}\r\n\r\n//虛擬化表格\r\nconst columns = reactive([\r\n    {\r\n        title: \"Status\",\r\n        dataIndex: \"deviceState\"\r\n    },\r\n    {\r\n        title: \"Device Name\",\r\n        dataIndex: \"deviceName\"\r\n    },\r\n    {\r\n        title: \"Label\",\r\n        dataIndex: \"aliasName\"\r\n    },\r\n    {\r\n        title: \"Enrolled Status\",\r\n        dataIndex: \"deviceState\"\r\n    }\r\n])\r\n</script>\r\n<template>\r\n    <div class=\"groupPWA layout-content\">\r\n        <div class=\"search_overlay layout-content\" :class=\"{ open: searchOverlayOpen }\">\r\n            <div class=\"search_bar p-3 ps-2 d-flex align-items-center border-b\">\r\n                <button class=\"me-2 px-2\" @click=\"searchOverlayOpen = false\">\r\n                    <font-awesome-icon icon=\"fa-solid fa-chevron-left\" size=\"lg\" />\r\n                </button>\r\n                <el-input v-model=\"searchText\" class=\"w-100\" size=\"large\" placeholder=\"\" :prefix-icon=\"Search\" @input=\"searchGroupData(groupTreeData)\" @focus=\"searchInputFocus = true\" @blur=\"searchInputFocus = false\">\r\n                    <template #prepend>\r\n                        <el-select v-model=\"searchType\" placeholder=\"群組\" style=\"width: 115px\" @change=\"clearResult\">\r\n                            <el-option label=\"群組\" value=\"group\" />\r\n                            <el-option label=\"裝置\" value=\"device\" />\r\n                        </el-select>\r\n                    </template>\r\n                </el-input>\r\n            </div>\r\n            <div class=\"layout-content search_result\">\r\n                <div class=\"p-4 text-center\" v-if=\"searchText !== '' && searchResult.length == 0\">\r\n                    查無資料\r\n                </div>\r\n                <el-scrollbar>\r\n                    <ul class=\"list-unstyled px-2\" v-if=\"searchText !== '' && searchResult.length > 0\">\r\n                        <li v-for=\"(item, index) in searchResult\" :key=\"index\" class=\"p-3 border-b\">\r\n                            <a href=\"\" @click.prevent=\"showNodeData(item); searchOverlayOpen = false\">\r\n                                <template v-if=\"searchType !== 'device'\">\r\n                                    <div class=\"d-flex align-items-center\">\r\n                                        <span class=\"me-2\">\r\n                                            <font-awesome-icon icon=\"fa-solid fa-folder\" size=\"xl\" />\r\n                                        </span>\r\n                                        <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n                                            <el-breadcrumb-item v-for=\"crumb in item.breadCrumb\" :key=\"crumb.slaveGroupId\">\r\n                                                <template v-slot:default>\r\n                                                    <span :class=\"{\r\n                                                        highLight:\r\n                                                            crumb.slaveGroupId ===\r\n                                                            item.nodeSlaveGroupId,\r\n                                                    }\">\r\n                                                        {{ crumb.slaveGroupName }}\r\n                                                    </span>\r\n                                                </template>\r\n                                            </el-breadcrumb-item>\r\n                                        </el-breadcrumb>\r\n                                    </div>\r\n                                </template>\r\n                                <template v-else-if=\"searchType === 'device'\">\r\n                                    <span class=\"highLight\">{{\r\n                                        item.device.deviceName\r\n                                    }}</span>\r\n                                </template>\r\n                            </a>\r\n                        </li>\r\n                    </ul>\r\n                </el-scrollbar>\r\n            </div>\r\n        </div>\r\n        <div class=\"quick_btn_group\">\r\n            <button @click=\"treeDrawerOpen = !treeDrawerOpen\" class=\"active_folder\">\r\n                <font-awesome-icon icon=\"fa-solid fa-list\" size=\"lg\" />\r\n            </button>\r\n            <button class=\"refresh_btn p-1 active_folder mt-4\">\r\n                <font-awesome-icon icon=\"fa-solid fa-arrows-rotate\" />\r\n            </button>\r\n        </div>\r\n        <div class=\"d-flex px-3 py-2 pe-2 border-b align-items-center bread_crumb\">\r\n            <el-scrollbar>\r\n                <div class=\"d-flex align-items-center\">\r\n                    <font-awesome-icon icon=\"fa-solid fa-house\" size=\"lg\" />\r\n                    <div class=\"ms-3\">\r\n                        <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n                            <el-breadcrumb-item v-for=\"item in breadCrumbList\" :key=\"`path-${item}`\">\r\n                                <a href=\"\" @click.prevent=\"showNodeData(item)\">{{ item.data.slaveGroupName }}</a>\r\n                            </el-breadcrumb-item>\r\n                        </el-breadcrumb>\r\n                    </div>\r\n                </div>\r\n            </el-scrollbar>\r\n            <button class=\"ms-3 px-3 py-1\" @click=\"searchOverlayOpen = true\">\r\n                <font-awesome-icon icon=\"fa-solid fa-magnifying-glass\" size=\"lg\" />\r\n            </button>\r\n            <el-popover placement=\"bottom\" trigger=\"click\">\r\n                <template #reference>\r\n                    <button class=\"px-3 py-1\">\r\n                        <font-awesome-icon icon=\"fa-solid fa-ellipsis-vertical\" size=\"lg\" />\r\n                    </button>\r\n                </template>\r\n                <div class=\"border-b d-flex flex-column mb-3\">\r\n                    <span class=\"ps-2 mb-3\">Create Group</span>\r\n                    <span class=\"ps-2 mb-3\">Add Device</span>\r\n                </div>\r\n                <div class=\"border-b d-flex flex-column mb-3\">\r\n                    <span class=\"ps-2 mb-3\">Rename</span>\r\n                    <span class=\"ps-2 mb-3\">Remove</span>\r\n                </div>\r\n                <div class=\"border-b d-flex flex-column mb-3\">\r\n                    <span class=\"ps-2 mb-3\">Assign Package</span>\r\n                    <span class=\"ps-2 mb-3\">Assign Profile</span>\r\n                    <span class=\"ps-2 mb-3\">Assign Media</span>\r\n                </div>\r\n                <div class=\"d-flex flex-column\">\r\n                    <span class=\"ps-2\">Reboot</span>\r\n                </div>\r\n            </el-popover>\r\n        </div>\r\n        <div class=\"d-flex ps-2 pe-3 py-2 align-items-center file_name\" v-if=\"breadCrumbList.length > 0\">\r\n            <button class=\"px-3 py-1\" v-if=\"currentNode !== ''\" @click=\"\r\n                showNodeData(\r\n                    breadCrumbList[breadCrumbList.length - 1].parent\r\n                )\r\n                \">\r\n                <font-awesome-icon icon=\"fa-solid fa-chevron-left\" />\r\n            </button>\r\n            <span class=\"ms-2 flex-grow-1\">{{ currentNode.slaveGroupName }}</span>\r\n        </div>\r\n        <div class=\"layout-content\">\r\n            <el-scrollbar class=\"d-none\">\r\n                <div class=\"px-2\">\r\n                    <div class=\"d-flex py-3 px-2 border-b align-items-center\" v-for=\"item in groupChildren\" :key=\"item.data.slaveGroupId\" @click=\"showNodeData(item)\">\r\n                        <font-awesome-icon icon=\"fa-solid fa-folder\" size=\"lg\" />\r\n                        <div class=\"w-50 ms-3\">\r\n                            {{ item.data.slaveGroupName }}\r\n                        </div>\r\n                        <div class=\"devide-line-v\"></div>\r\n                        <div class=\"w-50\"></div>\r\n                        <font-awesome-icon icon=\"fa-solid fa-chevron-right\" />\r\n                    </div>\r\n                    <p class=\"py-3 text-center\" v-if=\"groupChildren.length === 0\">\r\n                        無群組資料\r\n                    </p>\r\n                </div>\r\n            </el-scrollbar>\r\n            <s-table :columns=\"columns\" :data-source=\"deviceResult\"></s-table>\r\n        </div>\r\n        <el-drawer v-model=\"treeDrawerOpen\" direction=\"btt\" :show-close=\"false\" :with-header=\"false\" class=\"drawer_pwa px-3\" modal-class=\"drawer_pwa_overlay\" size=\"80%\">\r\n            <el-scrollbar max-height=\"100%\">\r\n                <el-tree :data=\"groupTreeData\" :props=\"defaultProps\" ref=\"treeRef\" :highlight-current=\"true\" :expand-on-click-node=\"false\" :check-on-click-node=\"true\" node-key=\"slaveGroupId\" :icon=\"ArrowRightBold\">\r\n                    <template #default=\"{ node }\">\r\n                        <label class=\"d-flex align-items-center w-100\" @click=\"\r\n                            showNodeData(node);\r\n                        treeDrawerOpen = !treeDrawerOpen;\r\n                        \">\r\n                            <font-awesome-icon icon=\"fa-solid fa-folder\" size=\"xl\" v-show=\"!node.expanded\" />\r\n                            <font-awesome-icon icon=\"fa-solid fa-folder-open\" size=\"xl\" v-show=\"node.expanded\" />\r\n                            <span class=\"ms-2\" :class=\"{\r\n                                highLight: currentNode === node.data,\r\n                            }\">{{ node.label }}</span>\r\n                        </label>\r\n                    </template>\r\n                </el-tree>\r\n            </el-scrollbar>\r\n        </el-drawer>\r\n\r\n    </div>\r\n</template>\r\n<style lang=\"scss\" scoped>\r\n@import \"@/assets/scss/all.scss\";\r\n\r\n.groupPWA {\r\n    background-color: #fff;\r\n}\r\n\r\n.search_overlay {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 2;\r\n    height: 100%;\r\n    width: 100%;\r\n    background-color: #fff;\r\n    opacity: 0;\r\n    visibility: hidden;\r\n    transition: .5s;\r\n\r\n    &.open {\r\n        opacity: 1;\r\n        visibility: visible;\r\n\r\n    }\r\n}\r\n\r\n.quick_btn_group {\r\n    position: fixed;\r\n    z-index: 1;\r\n    bottom: 30px;\r\n    right: 30px;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    button {\r\n        display: block;\r\n        width: 44px;\r\n        height: 44px;\r\n        border-radius: 50%;\r\n        background-color: #fff;\r\n        box-shadow: 0px 0px 8px 5px rgba(90, 90, 90, 0.1);\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n}\r\n\r\n.refresh_btn {\r\n    background-color: #fff;\r\n    width: 36px;\r\n    height: 36px;\r\n    border-radius: 50%;\r\n    box-shadow: 0px 0px 8px 5px rgba(90, 90, 90, 0.1);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n\r\n.bread_crumb {\r\n    border-bottom: 3px solid #eee;\r\n\r\n    .el-breadcrumb {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        align-items: center;\r\n    }\r\n\r\n    .el-scrollbar {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .el-scrollbar__view {\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n}\r\n\r\n.drawer_pwa_overlay {\r\n    background-color: transparent;\r\n}\r\n\r\n.drawer_pwa {\r\n    background-color: transparent;\r\n    box-shadow: 0px 0px 0px 0px transparent;\r\n    overflow: visible;\r\n    height: 80%;\r\n\r\n    .el-drawer__body {\r\n        background-color: #fff;\r\n        border-top-left-radius: 30px;\r\n        border-top-right-radius: 30px;\r\n        box-shadow: 5px 0px 8px 5px rgba(90, 90, 90, 0.1);\r\n    }\r\n}\r\n\r\n.el-tree-node__content {\r\n    padding: 8px 0;\r\n    height: fit-content;\r\n\r\n    .el-icon {\r\n        padding: 8px;\r\n        padding-right: 12px;\r\n    }\r\n}\r\n\r\n.highLight {\r\n    font-weight: 700;\r\n    color: $primary;\r\n    cursor: pointer;\r\n}\r\n\r\n.device {\r\n    .alias_name {\r\n        display: block;\r\n    }\r\n\r\n    .alias_input {\r\n        display: none;\r\n    }\r\n\r\n    &.can_edit {\r\n        .alias_name {\r\n            display: none;\r\n        }\r\n\r\n        .alias_input {\r\n            display: block;\r\n        }\r\n    }\r\n}\r\n\r\n.splitpanes__splitter {\r\n    background-color: #fa0;\r\n    position: relative;\r\n\r\n    &::before {\r\n        content: \"\";\r\n        display: block;\r\n        position: absolute;\r\n        left: 0;\r\n        top: 0;\r\n        transition: opacity 0.4s;\r\n        background-color: rgba(0, 0, 0, 0.3);\r\n        opacity: 0;\r\n        z-index: 0;\r\n    }\r\n\r\n    &:hover {\r\n        &::before {\r\n            opacity: 1;\r\n        }\r\n    }\r\n}\r\n\r\n.splitpanes--vertical>.splitpanes__splitter {\r\n    min-width: 2px;\r\n\r\n    &::before {\r\n        left: -4px;\r\n        right: -4px;\r\n        height: 100%;\r\n        width: 400%;\r\n    }\r\n}\r\n\r\n.splitpanes--horizontal>.splitpanes__splitter {\r\n    min-height: 2px;\r\n\r\n    &::before {\r\n        top: -4px;\r\n        bottom: -4px;\r\n        width: 100%;\r\n        height: 400%;\r\n    }\r\n}\r\n</style>\r\n","import script from \"./GroupMobileView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GroupMobileView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GroupMobileView.vue?vue&type=style&index=0&id=8393eae8&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-8393eae8\"]])\n\nexport default __exports__"],"names":["searchType","ref","searchText","searchInputFocus","treeDrawerOpen","searchOverlayOpen","groupTreeData","url","getTreeData","axios","get","then","res","inefiData","data","value","orgnizeTreeData","result","catch","err","console","log","forEach","item","slaveGroupName","masterGroupName","slaveGroupUUID","masterGroupUUID","slaveGroupId","masterGroupId","defaultProps","reactive","label","children","treeRef","group","store","state","checkSlaveGroup","setTimeout","node","getNode","showNodeData","ElMessage","message","type","watch","groupChildren","push","breadCrumbList","deviceResult","currentNode","length","clearResult","nodeSlaveGroupId","device","id","breadCrumb","pushBreadcrumb","level","parentNode","parent","reverse","setGroupChildren","childNodes","child","devices","expandTree","expanded","searchResult","searchGroupData","treeData","parentItem","results","Array","isArray","items","subgroup","subResult","filter","deviceName","toLowerCase","includes","Items","columns","title","dataIndex","__exports__"],"sourceRoot":""}
{"version":3,"file":"js/290.bb170e81.js","mappings":"wKAESA,MAAM,oC,kCAAXC,EAAAA,EAAAA,IAEM,MAFNC,EAEM,EADFC,EAAAA,EAAAA,IAA4BC,EAAAC,OAAA,Y,eCFpC,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,oRCHA,MAAMC,EAAOC,EAIPC,GAAgBC,EAAAA,EAAAA,IAAI,GAM1B,SAASC,EAAMC,GACXH,EAAcI,MAAQD,CAC1B,C,OAPAE,EAAAA,EAAAA,IAAML,GAAeM,IACjBR,EAAK,SAAUQ,EAAO,GACxB,CAACC,MAAK,EAAMC,WAAU,IAOxBC,EAAa,CACTP,U,iTCfJ,MAAMN,EAAc,EAEpB,Q,qMCCA,MAAMc,GAAQC,EAAAA,EAAAA,MACRC,GAASC,EAAAA,EAAAA,MAQTC,EAAa,CACf,CACIC,WAAY,QACZC,QAAS,QACTC,MAAO,OACPC,SAAU,QAEd,CACIH,WAAY,SACZC,QAAS,eACTG,SAAU,SACVF,MAAO,OACPC,SAAU,QAEd,CACIH,WAAY,cACZC,QAAS,aACTC,MAAO,GACPC,SAAU,SAEd,CACIH,WAAY,QACZC,QAAS,YACTG,SAAU,QACVF,MAAO,GACPC,SAAU,SAEd,CACIH,WAAY,KACZC,QAAS,KACTG,SAAU,KACVF,MAAO,QACPC,SAAU,SAEd,CACIH,WAAY,QACZC,QAAS,QACTC,MAAO,GACPC,SAAU,SAEd,CACIH,WAAY,KACZC,QAAS,eACTC,MAAO,GACPC,SAAU,SAEd,CACIH,WAAY,gBACZC,QAAS,WACTC,MAAO,QACPC,SAAU,SAEd,CACIH,WAAY,eACZC,QAAS,YACTC,MAAO,QACPC,SAAU,UAGZE,EAAgB,CAClB,CACIC,IAAK,WACLC,OAAQ,CAAC,SAAU,QAAS,iBAEhC,CACID,IAAK,eACLC,OAAQ,CAAC,YAGXC,EAAgB,CAClB,CACIP,QAAS,KACTQ,SAAU,KACVC,QAAS,CACL,CACIrB,MAAO,UACPsB,QAAS,WAEb,CACItB,MAAO,UACPsB,QAAS,WAEb,CACItB,MAAO,QACPsB,QAAS,YAMnBC,GAAmB1B,EAAAA,EAAAA,KAAI,GAC7B,SAAS2B,IACLD,EAAiBvB,OAAQ,CAC7B,CAGA,MAAMyB,GAAOC,EAAAA,EAAAA,IAAS,CAClB,CACIC,KAAM,WACNC,MAAO,YAEX,CACID,KAAM,YACNC,MAAO,aAEX,CACID,KAAM,eACNC,MAAO,kBAGf,SAASC,EAAY9B,GACjB,IAAI6B,EAAQH,EAAK1B,GAAO6B,MACxBpB,EAAOsB,KAAM,4BAA2BF,IAC5C,CAEA,MAAMG,GAAWlC,EAAAA,EAAAA,M,OACjBmC,EAAAA,EAAAA,KAAY,KACRD,EAAS/B,MAAMF,MAAM,EAAE,I,kwBCjI3B,MAAM,EAAc,EAEpB,O","sources":["webpack://inefi_cli/./src/components/BigCard.vue","webpack://inefi_cli/./src/components/BigCard.vue?5b39","webpack://inefi_cli/./src/components/TabsComponent.vue","webpack://inefi_cli/./src/components/TabsComponent.vue?9d04","webpack://inefi_cli/./src/views/deviceManagement/DeviceView.vue","webpack://inefi_cli/./src/views/deviceManagement/DeviceView.vue?90a4"],"sourcesContent":["<script setup></script>\r\n<template>\r\n    <div class=\"bigcard-component layout-content\">\r\n        <slot name=\"default\"></slot>\r\n    </div>\r\n</template>\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/all.scss\";\r\n.bigcard-component {\r\n    background-color: #fff;\r\n}\r\n@include bstrp(sm) {\r\n    .bigcard-component {\r\n        border-radius: 12px;\r\n        box-shadow: 8px 8px 20px 0px rgba(0, 0, 0, 0.3);\r\n    }\r\n}\r\n</style>\r\n","import { render } from \"./BigCard.vue?vue&type=template&id=e6b93f88\"\nconst script = {}\n\nimport \"./BigCard.vue?vue&type=style&index=0&id=e6b93f88&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<script setup>\r\nimport {ref, watch, defineProps, defineEmits, defineExpose} from \"vue\"\r\ndefineProps({\r\n    tabs: Array,\r\n})\r\nconst emit = defineEmits([\r\n    \"change\"\r\n])\r\n\r\nconst activeTabSelf = ref(0)\r\nwatch(activeTabSelf,(newVal)=>{\r\n    emit(\"change\", newVal)\r\n},{deep:true, immediate:true})\r\n\r\n\r\nfunction goTab(index){\r\n    activeTabSelf.value = index\r\n}\r\n\r\ndefineExpose({\r\n    goTab\r\n})\r\n</script>\r\n<template>\r\n    <ul class=\"custom-tabs\">\r\n        <li class=\"custom-tab px-4 py-3\" v-for=\"(item, index) in tabs\" :key=\"index\" \r\n        :class=\"{ 'active': activeTabSelf == index }\" @click=\"activeTabSelf = index\">\r\n            <slot name=\"tab\" :item=\"item\" :index=\"index\">\r\n                {{ item }}\r\n            </slot>\r\n        </li>\r\n    </ul>\r\n</template>\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/all.scss\";\r\n\r\n.custom-tabs {\r\n    display: flex;\r\n    margin: 0;\r\n    padding-left: 0;\r\n}\r\n\r\n.custom-tab {\r\n    font-size: 24px;\r\n    list-style: none;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    &::before {\r\n        content: '';\r\n        display: block;\r\n        width: 100%;\r\n        height: 4px;\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n    }\r\n\r\n    &.active {\r\n        &::before {\r\n            background-color: $primary;\r\n        }\r\n    }\r\n}\r\n</style>","import script from \"./TabsComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TabsComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./TabsComponent.vue?vue&type=style&index=0&id=1900e869&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__","<script setup>\r\nimport { ref } from \"vue\"\r\nimport { reactive } from \"vue\"\r\nimport { onActivated } from \"vue\"\r\n// import { onMounted } from \"vue\"\r\n// import {onBeforeUnmount} from \"vue\"\r\nimport {useStore} from \"vuex\"\r\nimport {useRouter} from \"vue-router\"\r\nconst store = useStore()\r\nconst router = useRouter()\r\n\r\nimport BigCard from \"@/components/BigCard.vue\";\r\nimport TabsComponent from \"@/components/TabsComponent.vue\";\r\n\r\n\r\n\r\n//table\r\nconst tableProps = [\r\n    {\r\n        columnName: \"INDEX\",\r\n        dataKey: \"index\",\r\n        width: \"65px\",\r\n        minWidth: \"65px\",\r\n    },\r\n    {\r\n        columnName: \"Status\",\r\n        dataKey: \"healthStatus\",\r\n        slotName: \"status\",\r\n        width: \"65px\",\r\n        minWidth: \"65px\",\r\n    },\r\n    {\r\n        columnName: \"Device Name\",\r\n        dataKey: \"deviceName\",\r\n        width: 20,\r\n        minWidth: \"210px\"\r\n    },\r\n    {\r\n        columnName: \"Label\",\r\n        dataKey: \"aliasName\",\r\n        slotName: \"label\",\r\n        width: 15,\r\n        minWidth: \"160px\"\r\n    },\r\n    {\r\n        columnName: \"OS\",\r\n        dataKey: \"os\",\r\n        slotName: \"os\",\r\n        width: \"150px\",\r\n        minWidth: \"150px\",\r\n    },\r\n    {\r\n        columnName: \"Model\",\r\n        dataKey: \"model\",\r\n        width: 15,\r\n        minWidth: \"140px\"\r\n    },\r\n    {\r\n        columnName: \"SN\",\r\n        dataKey: \"serialNumber\",\r\n        width: 20,\r\n        minWidth: \"150px\"\r\n    },\r\n    {\r\n        columnName: \"Agent Version\",\r\n        dataKey: \"agentVer\",\r\n        width: \"110px\",\r\n        minWidth: \"130px\",\r\n    },\r\n    {\r\n        columnName: \"Last Connect\",\r\n        dataKey: \"timestamp\",\r\n        width: \"150px\",\r\n        minWidth: \"150px\",\r\n    },\r\n]\r\nconst columnsExcept = [\r\n    {\r\n        tab: \"Enrolled\",\r\n        except: [\"Status\", \"Label\", \"Last Connect\"]\r\n    },\r\n    {\r\n        tab: \"Disconnected\",\r\n        except: [\"Status\"]\r\n    },\r\n]\r\nconst filterOptions = [\r\n    {\r\n        dataKey: \"os\",\r\n        typeName: \"OS\",\r\n        options: [\r\n            {\r\n                value: \"WINDOWS\",\r\n                valName: \"Windows\"\r\n            },\r\n            {\r\n                value: \"ANDROID\",\r\n                valName: \"Android\"\r\n            },\r\n            {\r\n                value: \"LINUX\",\r\n                valName: \"Linux\"\r\n            },\r\n        ]\r\n    }\r\n]\r\n\r\nconst firstBatchLoaded = ref(false)\r\nfunction loaded(){\r\n    firstBatchLoaded.value = true\r\n}\r\n\r\n//切換tab\r\nconst tabs = reactive([\r\n    {\r\n        name: \"Enrolled\",\r\n        route: \"enrolled\",\r\n    },\r\n    {\r\n        name: \"Connected\",\r\n        route: \"connected\",\r\n    },\r\n    {\r\n        name: \"Disconnected\",\r\n        route: \"disconnected\",\r\n    },\r\n])\r\nfunction changeTable(index){\r\n    let route = tabs[index].route\r\n    router.push(`/deviceManagement/device/${route}`)\r\n}\r\n\r\nconst tableTab = ref()\r\nonActivated(()=>{\r\n    tableTab.value.goTab(0)\r\n})\r\n\r\n</script>\r\n<template>\r\n    <BigCard>\r\n        <div class=\"border-b\">\r\n            <TabsComponent :tabs=\"tabs\" class=\"device_tabs\" @change=\"changeTable\" ref=\"tableTab\">\r\n                <template #tab=\"{ item }\">\r\n                    <div class=\"d-flex align-items-center w-100 justify-content-center\">\r\n                        <span>{{ item.name }}</span>\r\n                        <span class=\"number ms-2 px-2 py-1\" v-if=\"firstBatchLoaded\">\r\n                            {{ store.state.scrollBatchLoad.totalDeviceCount\r\n                            [item.name.toLowerCase() == \"enrolled\" ? \"total\" : item.name.toLowerCase()] }}\r\n                        </span>\r\n                    </div>\r\n                </template>\r\n            </TabsComponent>\r\n        </div>\r\n        <div class=\"layout-content\">\r\n            <router-view v-slot=\"{ Component }\">\r\n                <keep-alive :include=\"store.state.keepAlive.include\">\r\n                    <component :is=\"Component\" :tableProps=\"tableProps\" :columnsExcept=\"columnsExcept\"\r\n                :filterOptions=\"filterOptions\" @loaded=\"loaded\"/>\r\n                </keep-alive>\r\n            </router-view>\r\n        </div>\r\n\r\n    </BigCard>\r\n</template>\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/all.scss\";\r\n.device_tabs{\r\n    *{\r\n        font-size: 16px;\r\n    }\r\n    .number{\r\n        @extend .fw-bold;\r\n        border-radius: 4px;\r\n        color: #737373;\r\n        background-color: #ddd;\r\n    }\r\n    .custom-tab.active{\r\n        .number{\r\n            color: $primary;\r\n            background-color: #c9effa;\r\n        }\r\n    }\r\n}\r\n.status_dot {\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n\r\n    &.err {\r\n        background-color: $danger;\r\n    }\r\n\r\n    &.good {\r\n        background-color: $success;\r\n    }\r\n\r\n}\r\n.label {\r\n    width: 100%;\r\n    min-height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .alias_name {\r\n        display: block;\r\n    }\r\n\r\n    .alias_input {\r\n        display: none;\r\n    }\r\n\r\n    &.can_edit {\r\n        .alias_name {\r\n            display: none;\r\n        }\r\n\r\n        .alias_input {\r\n            display: block;\r\n        }\r\n    }\r\n}\r\n</style>","import script from \"./DeviceView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DeviceView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DeviceView.vue?vue&type=style&index=0&id=3ea5e629&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_renderSlot","_ctx","$slots","script","__exports__","render","emit","__emit","activeTabSelf","ref","goTab","index","value","watch","newVal","deep","immediate","__expose","store","useStore","router","useRouter","tableProps","columnName","dataKey","width","minWidth","slotName","columnsExcept","tab","except","filterOptions","typeName","options","valName","firstBatchLoaded","loaded","tabs","reactive","name","route","changeTable","push","tableTab","onActivated"],"sourceRoot":""}
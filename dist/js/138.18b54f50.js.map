{"version":3,"file":"js/138.18b54f50.js","mappings":"wKAESA,MAAM,oC,kCAAXC,EAAAA,EAAAA,IAEM,MAFNC,EAEM,EADFC,EAAAA,EAAAA,IAA4BC,EAAAC,OAAA,Y,eCFpC,MAAMC,EAAS,CAAC,EAKVC,GAA2B,OAAgBD,EAAQ,CAAC,CAAC,SAASE,KAEpE,O,qkBCFA,MAAMD,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,uXCFA,MAAM,GAA2B,OAAgB,EAAQ,CAAC,CAAC,YAAY,qBAEvE,Q,6BCPA,MAAME,EAAI,CACRC,KAAM,aACNC,MAAO,CAAC,QAAS,SAAU,UAAW,aAAc,gBAAiB,WAAY,cAAe,kBAChGC,MAAO,CACLC,WAAY,CAAEC,KAAMC,SACpBC,eAAgB,CAAEF,KAAMC,QAASE,SAAS,GAC1CC,iBAAkB,CAAEJ,KAAMC,QAASE,SAAS,GAC5CE,IAAK,CAAEL,KAAMC,QAASE,SAAS,GAC/BG,cAAe,CAAEN,KAAMC,UAEzB,OAAAM,GACE,MAAO,CACLC,cAAeC,KAAKD,cACpBE,UAAWD,KAAKC,UAChBC,aAAcF,KAAKE,aACnBC,YAAaH,KAAKG,YAEtB,EACAC,KAAM,KAAM,CACVC,UAAW,KACXC,OAAO,EACPC,MAAO,GACPC,MAAO,CACLC,WAAW,EACXC,UAAU,EACVC,eAAgB,MAElBC,aAAc,CACZC,SAAU,KACVC,UAAW,QAGfC,SAAU,CACR,UAAAC,GACE,OAAOhB,KAAKO,MAAMU,MACpB,EACA,YAAAC,GACE,OAAOlB,KAAKO,MAAMY,QAAO,CAACC,EAAGC,KAAOD,EAAEC,EAAEC,IAAMD,IAAMD,GAAG,CAAC,EAC1D,GAEFG,QAAS,CACP,oBAAAC,GACExB,KAAKO,MAAMkB,SAASL,IAClBA,EAAEM,QAAUN,EAAEM,OAAO,CACnB,CAAC1B,KAAKV,WAAa,SAAW,SAAU,GAAGU,KAAKkB,aAAaE,EAAEE,IAAIK,SACnE,GAEN,EACA,UAAAC,GACEC,SAASC,iBAAiB,YAAa9B,KAAK+B,YAAa,CAAEC,SAAS,IAAOH,SAASC,iBAAiB,UAAW9B,KAAKiC,WAAY,iBAAkBC,SAAWL,SAASC,iBAAiB,YAAa9B,KAAK+B,YAAa,CAAEC,SAAS,IAAOH,SAASC,iBAAiB,WAAY9B,KAAKiC,WACtR,EACA,YAAAE,GACEN,SAASO,oBAAoB,YAAapC,KAAK+B,YAAa,CAAEC,SAAS,IAAOH,SAASO,oBAAoB,UAAWpC,KAAKiC,WAAY,iBAAkBC,SAAWL,SAASO,oBAAoB,YAAapC,KAAK+B,YAAa,CAAEC,SAAS,IAAOH,SAASO,oBAAoB,WAAYpC,KAAKiC,WAClS,EACA,WAAAI,CAAYjB,EAAGC,GACbrB,KAAK4B,aAAc5B,KAAKQ,MAAMC,WAAY,EAAIT,KAAKQ,MAAMG,eAAiBU,CAC5E,EACA,WAAAU,CAAYX,GACVpB,KAAKQ,MAAMC,YAAcW,EAAEkB,iBAAkBtC,KAAKQ,MAAME,UAAW,EAAIV,KAAKuC,mBAAmBvC,KAAKwC,oBAAoBpB,IAAKpB,KAAKyC,MAAM,SAAUzC,KAAKO,MAAMmC,KAAKrB,IAAM,CAAGsB,IAAKtB,EAAEsB,IAAKC,IAAKvB,EAAEuB,IAAKjB,KAAMN,EAAEM,UAC7M,EACA,SAAAM,GACEjC,KAAKQ,MAAME,UAAYV,KAAKyC,MAAM,UAAWzC,KAAKO,MAAMmC,KAAKtB,IAAM,CAAGuB,IAAKvB,EAAEuB,IAAKC,IAAKxB,EAAEwB,IAAKjB,KAAMP,EAAEO,UAAW3B,KAAKQ,MAAMC,WAAY,EAAIoC,YAAW,KACrJ7C,KAAKQ,MAAME,UAAW,EAAIV,KAAKmC,cAAc,GAC5C,IACL,EACA,eAAAW,CAAgB1B,EAAGC,GACjB,iBAAkBa,SAAWd,EAAEkB,iBAAkBtC,KAAKL,mBAAqBK,KAAKY,aAAaC,WAAaQ,GAAK0B,aAAa/C,KAAKY,aAAaE,WAAYd,KAAKY,aAAaE,UAAY,KAAMd,KAAKgD,mBAAmB5B,EAAGC,GAAIrB,KAAKY,aAAaC,SAAW,OAASb,KAAKY,aAAaC,SAAWQ,EAAGrB,KAAKY,aAAaE,UAAY+B,YAAW,KAC1U7C,KAAKY,aAAaC,SAAW,IAAI,GAChC,QAASb,KAAKQ,MAAME,UAAYV,KAAKyC,MAAM,iBAAkBzC,KAAKO,MAAMc,GAC7E,EACA,kBAAA2B,CAAmB5B,EAAGC,GACpB,IAAI4B,EAAI,EACRjD,KAAKO,MAAQP,KAAKO,MAAMmC,KAAI,CAACQ,EAAGC,KAAOD,EAAEvB,KAAOwB,IAAM9B,EAAI6B,EAAEN,IAAMM,EAAEP,IAAKQ,IAAM9B,IAAM4B,GAAKC,EAAEP,KAAMO,KAAKlD,KAAKO,MAAMc,GAAGM,MAAQsB,EAAGjD,KAAKyC,MAAM,gBAAiBzC,KAAKO,MAAMc,IAAKrB,KAAKyC,MAAM,UAAWzC,KAAKO,MAAMmC,KAAKQ,IAAM,CAAGP,IAAKO,EAAEP,IAAKC,IAAKM,EAAEN,IAAKjB,KAAMuB,EAAEvB,SAC7P,EACA,WAAAxB,CAAYiB,EAAGC,GACbrB,KAAKyC,MAAM,aAAczC,KAAKkB,aAAaG,GAC7C,EACA,mBAAAmB,CAAoBpB,GAClB,MAAMC,EAAIrB,KAAKK,UAAU+C,yBAA2BC,QAASJ,EAAGK,QAASJ,GAAM,iBAAkBhB,QAAUd,EAAEmC,QAAUnC,EAAEmC,QAAQ,GAAKnC,EACtI,MAAO,CACLoC,EAAGP,EAAI5B,EAAEoC,KACTC,EAAGR,EAAI7B,EAAEsC,IAEb,EACA,wBAAAC,CAAyBxC,GACvBA,EAAIA,EAAEpB,KAAKV,WAAa,IAAM,KAC9B,MAAM+B,EAAIrB,KAAKK,UAAUL,KAAKV,WAAa,eAAiB,eAC5D,OAAOU,KAAKJ,MAAQI,KAAKV,aAAe8B,EAAIC,EAAID,GAAQ,IAAJA,EAAUC,CAChE,EACA,kBAAAkB,CAAmBnB,GACjB,MAAMC,EAAIrB,KAAKQ,MAAMG,eACrB,IAAIsC,EAAI,CACNY,cAAe7D,KAAK8D,iBAAiBzC,GACrC0C,cAAe/D,KAAKgE,iBAAiB3C,GACrC4C,oBAAqB,EACrBC,oBAAqB,GAEvB,MAAMhB,EAAI,GAAKlD,KAAKP,eAAiB,EAAIwD,EAAEY,eAAgBV,EAAI,KAAOnD,KAAKP,eAAiB,EAAIwD,EAAEc,eAAgBI,EAAIC,KAAKxB,IAAIwB,KAAKzB,IAAI3C,KAAK4D,yBAAyBxC,GAAI+B,GAAID,GAC9K,IAAImB,EAAI,CAAChD,EAAGA,EAAI,GAAIiD,EAAItE,KAAKO,MAAM8D,EAAE,KAAO,KAAME,EAAIvE,KAAKO,MAAM8D,EAAE,KAAO,KAC1E,MAAMG,EAAIF,EAAE1B,IAAM,KAAOuB,GAAKG,EAAE1B,IAAMK,EAAEY,cAAeY,EAAIF,EAAE3B,IAAM,KAAOuB,GAAK,KAAOI,EAAE3B,IAAM5C,KAAKgE,iBAAiB3C,EAAI,IACxH,GAAImD,GAAKC,EACPD,GAAKF,EAAE3C,KAAO2C,EAAE1B,IAAK2B,EAAE5C,KAAOyC,KAAKxB,IAAI,IAAM0B,EAAE1B,IAAMK,EAAEY,cAAgBZ,EAAEc,cAAe,KAAOO,EAAE3C,KAAOyC,KAAKxB,IAAI,IAAM2B,EAAE3B,IAAMK,EAAEY,cAAgB7D,KAAKgE,iBAAiB3C,EAAI,GAAI,GAAIkD,EAAE5C,KAAO4C,EAAE3B,SADhM,CAIA,GAAI5C,KAAKP,eAAgB,CACvB,MAAMiF,EAAI1E,KAAK2E,iBAAiB1B,EAAGkB,GACnC,IAAKO,EACH,SACCE,KAAM3B,EAAG4B,cAAeR,GAAMK,GAAIJ,EAAItE,KAAKO,MAAM8D,EAAE,KAAO,KAAME,EAAIvE,KAAKO,MAAM8D,EAAE,KAAO,IAC7F,CACM,OAANC,IAAeA,EAAE3C,KAAOyC,KAAKzB,IAAIyB,KAAKxB,IAAIuB,EAAIlB,EAAEY,cAAgBZ,EAAEgB,oBAAqBK,EAAE3B,KAAM2B,EAAE1B,MAAa,OAAN2B,IAAeA,EAAE5C,KAAOyC,KAAKzB,IAAIyB,KAAKxB,IAAI,IAAMuB,EAAIlB,EAAEc,cAAgBd,EAAEiB,oBAAqBK,EAAE5B,KAAM4B,EAAE3B,KAP/M,CAQF,EACA,gBAAA+B,CAAiBvD,EAAGC,GAClB,MAAM4B,EAAIjD,KAAKQ,MAAMG,eAAgBuC,EAAI,CAACD,EAAGA,EAAI,GACjD,OAAO5B,EAAID,EAAEyC,cAAgB7D,KAAKO,MAAM2C,EAAE,IAAIP,MAAQO,EAAE,GAAKlD,KAAK8E,qBAAqB7B,GAAG8B,MAAO3D,EAAE6C,oBAAsB,EAAGf,EAAE,GAAKD,GAAKjD,KAAKO,MAAMkB,SAAQ,CAAC0B,EAAGgB,KAC7JA,EAAIjB,EAAE,IAAMiB,GAAKlB,IAAME,EAAExB,KAAOwB,EAAER,IAAKvB,EAAE6C,qBAAuBd,EAAER,IAAI,IACpEvB,EAAEyC,cAAgB7D,KAAK8D,iBAAiBZ,EAAE,SAAc,IAATA,EAAE,KAAkB9B,EAAE6C,oBAAsB,EAAGjE,KAAKO,MAAM,GAAGoB,KAAO3B,KAAKO,MAAM,GAAGoC,IAAK3C,KAAKO,MAAMkB,SAAQ,CAAC0B,EAAGgB,KAC/JA,EAAI,GAAKA,GAAKlB,IAAME,EAAExB,KAAOwB,EAAER,IAAKvB,EAAE6C,qBAAuBd,EAAER,IAAI,IACjE3C,KAAKO,MAAM2C,EAAE,IAAIvB,KAAO,IAAMP,EAAE6C,oBAAsBjE,KAAKO,MAAM,GAAGoC,IAAMvB,EAAEyC,cAAgBzC,EAAE2C,cAAe,MAAQ1C,EAAI,IAAMD,EAAE2C,cAAgB/D,KAAKO,MAAM2C,EAAE,IAAIP,MAAQO,EAAE,GAAKlD,KAAKgF,qBAAqB/B,GAAG8B,MAAO3D,EAAE8C,oBAAsB,EAAGhB,EAAE,GAAKD,EAAI,GAAKjD,KAAKO,MAAMkB,SAAQ,CAAC0B,EAAGgB,KACzRA,EAAIlB,GAAKkB,EAAIjB,EAAE,KAAOC,EAAExB,KAAOwB,EAAER,IAAKvB,EAAE8C,qBAAuBf,EAAER,IAAI,IACnEvB,EAAE2C,cAAgB/D,KAAKgE,iBAAiBd,EAAE,GAAK,QAAa,IAATA,EAAE,KAAkB9B,EAAE8C,oBAAsB,EAAGlE,KAAKO,MAAMP,KAAKgB,WAAa,GAAGW,KAAO3B,KAAKO,MAAMP,KAAKgB,WAAa,GAAG2B,IAAK3C,KAAKO,MAAMkB,SAAQ,CAAC0B,EAAGgB,KACvMA,EAAInE,KAAKgB,WAAa,GAAKmD,GAAKlB,EAAI,IAAME,EAAExB,KAAOwB,EAAER,IAAKvB,EAAE8C,qBAAuBf,EAAER,IAAI,IACvF3C,KAAKO,MAAM2C,EAAE,IAAIvB,KAAO,IAAMP,EAAEyC,cAAgBzC,EAAE8C,oBAAsBlE,KAAKO,MAAMP,KAAKgB,WAAa,GAAG2B,IAAMvB,EAAE2C,cAAe,MAAQ,CAAEa,KAAMxD,EAAGyD,cAAe3B,EACvK,EACA,gBAAAY,CAAiB1C,GACf,OAAOpB,KAAKO,MAAMY,QAAO,CAACE,EAAG4B,EAAGC,IAAM7B,GAAK6B,EAAI9B,EAAI6B,EAAEtB,KAAO,IAAI,EAClE,EACA,gBAAAqC,CAAiB5C,GACf,OAAOpB,KAAKO,MAAMY,QAAO,CAACE,EAAG4B,EAAGC,IAAM7B,GAAK6B,EAAI9B,EAAI,EAAI6B,EAAEtB,KAAO,IAAI,EACtE,EACA,oBAAAmD,CAAqB1D,GACnB,MAAO,IAAIpB,KAAKO,OAAO0E,UAAUC,MAAMjC,GAAMA,EAAE8B,MAAQ3D,GAAK6B,EAAEtB,KAAOsB,EAAEN,OAAQ,CAAC,CAClF,EACA,oBAAAqC,CAAqB5D,GACnB,OAAOpB,KAAKO,MAAM2E,MAAMjC,GAAMA,EAAE8B,MAAQ3D,EAAI,GAAK6B,EAAEtB,KAAOsB,EAAEN,OAAQ,CAAC,CACvE,EACA,oBAAAwC,GACEC,MAAMC,KAAKrF,KAAKK,UAAUiF,UAAU7D,SAASJ,IAC3C,MAAM4B,EAAI5B,EAAEkE,UAAUC,SAAS,oBAAqBtC,EAAI7B,EAAEkE,UAAUC,SAAS,yBAC5EvC,IAAMC,IAAM7B,EAAEoE,WAAWC,YAAYrE,GAAIsE,QAAQC,KAAK,gHAAgH,GAE3K,EACA,WAAAC,CAAYzE,EAAGC,EAAG4B,GAAI,GACpB,MAAMC,EAAI9B,EAAI,EAAG+B,EAAItB,SAASiE,cAAc,OAC5C3C,EAAEoC,UAAUQ,IAAI,wBAAyB9C,IAAME,EAAE6C,YAAe7B,GAAMnE,KAAKqC,YAAY8B,EAAGjB,UAAWhB,OAAS,KAAO,iBAAkBA,SAAWiB,EAAE8C,aAAgB9B,GAAMnE,KAAKqC,YAAY8B,EAAGjB,IAAKC,EAAE+C,QAAW/B,GAAMnE,KAAK8C,gBAAgBqB,EAAGjB,EAAI,IAAKlD,KAAKL,mBAAqBwD,EAAEgD,WAAchC,GAAMnE,KAAKgD,mBAAmBmB,EAAGjB,EAAI,IAAK7B,EAAEoE,WAAWW,aAAajD,EAAG9B,EAC1W,EACA,cAAAgF,CAAejF,GACbA,EAAE4E,iBAAc,EAAQ5E,EAAE8E,aAAU,EAAQ9E,EAAE+E,gBAAa,EAAQ/E,EAAEqE,WAAWC,YAAYtE,EAC9F,EACA,aAAAkF,GACE,MAAMlF,EAAIgE,MAAMC,KAAKrF,KAAKK,UAAUiF,UACpClE,EAAEK,SAASwB,IACTA,EAAEsD,UAAUC,SAAS,yBAA2BxG,KAAKqG,eAAepD,EAAE,IAExE,IAAI5B,EAAI,EACRD,EAAEK,SAASwB,IACTA,EAAEsD,UAAUC,SAAS,uBAAyBnF,GAAKrB,KAAKH,cAAgBG,KAAK6F,YAAYxE,EAAG4B,GAAG,GAAM5B,GAAKrB,KAAK6F,YAAYxE,EAAG4B,GAAI5B,IAAI,GAE1I,EACA,aAAAtB,EAAgB0G,OAAQrF,KAAMC,IAC5B,MAAM4B,EAAIjD,KAAKkB,aAAaE,EAAEsF,EAAEC,KAChCC,OAAOC,QAAQxF,GAAGI,SAAQ,EAAEyB,EAAGC,KAAOF,EAAEC,GAAKC,GAC/C,EACA,SAAAlD,CAAUmB,GACR,IAAIC,GAAK,EACT+D,MAAMC,KAAKjE,EAAE0F,IAAIrB,WAAWH,UAAUyB,MAAM5D,IAAOA,EAAEoD,UAAUC,SAAS,qBAAuBnF,IAAK8B,IAAM/B,EAAE0F,OAC5G,MAAM7D,EAAI+D,WAAW5F,EAAE6F,SAAU/D,EAAI8D,WAAW5F,EAAE8F,SAClDlH,KAAKO,MAAM4G,OAAO9F,EAAG,EAAG,CACtBC,GAAIF,EAAEsF,EAAEC,IACR5B,MAAO1D,EACPsB,IAAKyE,MAAMnE,GAAK,EAAIA,EACpBL,IAAKwE,MAAMlE,GAAK,IAAMA,EACtBvB,KAAiB,OAAXP,EAAEO,KAAgB,KAAOqF,WAAW5F,EAAEO,MAC5C0F,UAAWjG,EAAEO,KACbD,OAAQN,EAAEM,SACR1B,KAAKO,MAAMkB,SAAQ,CAAC0B,EAAGgB,IAAMhB,EAAE4B,MAAQZ,IAAInE,KAAKM,OAASN,KAAKsH,WAAU,KAC1EtH,KAAKsG,gBAAiBtG,KAAKuH,eAAe,CAAEC,UAAWxH,KAAKO,MAAMc,KAAOrB,KAAKyC,MAAM,WAAY,CAAEsC,MAAO1D,EAAGd,MAAOP,KAAKO,MAAMmC,KAAKS,IAAM,CAAGR,IAAKQ,EAAER,IAAKC,IAAKO,EAAEP,IAAKjB,KAAMwB,EAAExB,UAAW,GAE3L,EACA,YAAAzB,CAAakB,GACX,MAAMC,EAAIrB,KAAKO,MAAMkH,WAAWvE,GAAMA,EAAE5B,KAAOF,EAAEsF,EAAEC,MAAM1D,EAAIjD,KAAKO,MAAM4G,OAAO9F,EAAG,GAAG,GACrFrB,KAAKO,MAAMkB,SAAQ,CAACyB,EAAGC,IAAMD,EAAE6B,MAAQ5B,IAAInD,KAAKsH,WAAU,KACxDtH,KAAKsG,gBAAiBtG,KAAKuH,eAAe,CAAEG,YAAa,IAAKzE,EAAG8B,MAAO1D,KAAQrB,KAAKyC,MAAM,cAAe,CAAEkF,QAAS1E,EAAG1C,MAAOP,KAAKO,MAAMmC,KAAKQ,IAAM,CAAGP,IAAKO,EAAEP,IAAKC,IAAKM,EAAEN,IAAKjB,KAAMuB,EAAEvB,UAAW,GAEvM,EACA,cAAA4F,CAAenG,EAAI,CAAC,GACjBA,EAAEoG,WAAcpG,EAAEsG,YAA0C1H,KAAKO,MAAMwG,MAAM1F,GAAsB,OAAhBA,EAAEgG,WAAsBhG,EAAEsB,KAAOtB,EAAEuB,IAAM,MAAO5C,KAAK4H,yBAAyBxG,GAAKpB,KAAK6H,WAA3I7H,KAAK8H,qBAAkJ9H,KAAKM,OAASN,KAAKyC,MAAM,UAAWzC,KAAKO,MAAMmC,KAAKrB,IAAM,CAAGsB,IAAKtB,EAAEsB,IAAKC,IAAKvB,EAAEuB,IAAKjB,KAAMN,EAAEM,SACvR,EACA,QAAAkG,GACE,MAAMzG,EAAI,IAAMpB,KAAKgB,WACrB,IAAIK,EAAI,EACR,MAAM4B,EAAI,GAAIC,EAAI,GAClBlD,KAAKO,MAAMkB,SAAS0B,IAClBA,EAAExB,KAAOyC,KAAKxB,IAAIwB,KAAKzB,IAAIvB,EAAG+B,EAAEP,KAAMO,EAAER,KAAMtB,GAAK8B,EAAExB,KAAMwB,EAAExB,MAAQwB,EAAEP,KAAOK,EAAE8E,KAAK5E,EAAE7B,IAAK6B,EAAExB,MAAQwB,EAAER,KAAOO,EAAE6E,KAAK5E,EAAE7B,GAAG,IACzHD,EAAI,IAAOrB,KAAKgI,cAAc3G,EAAG4B,EAAGC,EAC1C,EACA,kBAAA4E,GACE,IAAI1G,EAAI,IACR,MAAMC,EAAI,GAAI4B,EAAI,GAClB,IAAIC,EAAI,EACRlD,KAAKO,MAAMkB,SAAS0C,IAClB/C,GAAK+C,EAAExC,KAAiB,OAAXwC,EAAExC,MAAiBuB,IAAKiB,EAAExC,MAAQwC,EAAEvB,KAAOvB,EAAE0G,KAAK5D,EAAE7C,IAAK6C,EAAExC,MAAQwC,EAAExB,KAAOM,EAAE8E,KAAK5D,EAAE7C,GAAG,IAEvG,IAAI6B,EAAI,IACR/B,EAAI,KAAQpB,KAAKO,MAAMkB,SAAS0C,IACnB,OAAXA,EAAExC,OAAkBwC,EAAExC,KAAOyC,KAAKxB,IAAIwB,KAAKzB,IAAIvB,GAAKpB,KAAKgB,WAAakC,GAAIiB,EAAEvB,KAAMuB,EAAExB,MAAOQ,GAAKgB,EAAExC,IAAI,IACpGwB,EAAI,IAAOnD,KAAKgI,cAAc5G,EAAGC,EAAG4B,GAC1C,EACA,wBAAA2E,EAA2BJ,UAAWpG,EAAGsG,YAAarG,GAAM,CAAC,GAC3D,IAAI4B,EAAI,IAAMjD,KAAKgB,WAAYkC,EAAI,EACnC,MAAMC,EAAI,GAAIgB,EAAI,GAClB/C,GAAqB,OAAhBA,EAAEiG,YAAuBpE,GAAK,IAAM7B,EAAEiG,YAAcrH,KAAKgB,WAAa,IAAKhB,KAAKO,MAAMkB,SAAS4C,IAClGnB,GAAKmB,EAAE1C,KAAM0C,EAAE1C,MAAQ0C,EAAEzB,KAAOO,EAAE4E,KAAK1D,EAAE/C,IAAK+C,EAAE1C,MAAQ0C,EAAE1B,KAAOwB,EAAE4D,KAAK1D,EAAE/C,GAAG,MACzE8C,KAAK6D,IAAI/E,GAAK,MAASlD,KAAKO,MAAMkB,SAAS4C,IAC/CjD,GAAqB,OAAhBA,EAAEiG,WAAsBjG,EAAEE,KAAO+C,EAAE/C,KAAO+C,EAAE1C,KAAOyC,KAAKxB,IAAIwB,KAAKzB,IAAIM,EAAGoB,EAAEzB,KAAMyB,EAAE1B,MAAOO,GAAKmB,EAAE1C,KAAM0C,EAAE1C,MAAQ0C,EAAEzB,KAAOO,EAAE4E,KAAK1D,EAAE/C,IAAK+C,EAAE1C,MAAQ0C,EAAE1B,KAAOwB,EAAE4D,KAAK1D,EAAE/C,GAAG,IACzK4B,EAAI,IAAOlD,KAAKgI,cAAc9E,EAAGC,EAAGgB,GAC1C,EACA,aAAA6D,CAAc5G,EAAGC,EAAG4B,GAClB,IAAIC,EACIA,EAAR9B,EAAI,EAAQA,GAAKpB,KAAKgB,WAAaK,EAAEJ,QAAcG,GAAKpB,KAAKgB,WAAaiC,EAAEhC,QAASjB,KAAKO,MAAMkB,SAAQ,CAAC0B,EAAGgB,KAC1G,GAAI/C,EAAI,IAAMC,EAAEmF,SAASrD,EAAE7B,IAAK,CAC9B,MAAM+C,EAAID,KAAKxB,IAAIwB,KAAKzB,IAAIQ,EAAExB,KAAOuB,EAAGC,EAAEP,KAAMO,EAAER,KAAM2B,EAAID,EAAIlB,EAAExB,KAClEP,GAAKkD,EAAGnB,EAAExB,KAAO0C,CACnB,MAAO,IAAKpB,EAAEuD,SAASrD,EAAE7B,IAAK,CAC5B,MAAM+C,EAAID,KAAKxB,IAAIwB,KAAKzB,IAAIQ,EAAExB,KAAOuB,EAAGC,EAAEP,KAAMO,EAAER,KAAM2B,EAAID,EAAIlB,EAAExB,KAClEP,GAAKkD,EAAGnB,EAAExB,KAAO0C,CACnB,CACAlB,EAAEzB,OAAO,CACP,CAAC1B,KAAKV,WAAa,SAAW,SAAU,GAAGU,KAAKkB,aAAaiC,EAAE7B,IAAIK,SACnE,IACAyC,KAAK6D,IAAI7G,GAAK,IAAOpB,KAAKsH,WAAU,KACtCtH,KAAKM,OAASqF,QAAQC,KAAK,yEAAyE,GAExG,GAEFsC,MAAO,CACL3H,MAAO,CACL4H,MAAM,EACNC,WAAW,EACX,OAAAC,GACErI,KAAKwB,sBACP,GAEF,UAAAlC,GACEU,KAAKwB,sBACP,EACA,aAAA3B,GACEG,KAAKsG,eACP,EACA,gBAAA3G,CAAiByB,GACf,IAAIpB,KAAKK,UAAUiI,iBAAiB,0BAA0B7G,SAAQ,CAACwB,EAAGC,KACxED,EAAEkD,WAAa/E,EAAK+B,GAAMnD,KAAKgD,mBAAmBG,EAAGD,QAAK,CAAM,GAEpE,GAEF,aAAAqF,GACEvI,KAAKM,OAAQ,CACf,EACA,OAAAkI,GACExI,KAAKK,UAAYL,KAAKyI,MAAMpI,UAAWL,KAAKmF,uBAAwBnF,KAAKsG,gBAAiBtG,KAAKuH,iBAAkBvH,KAAKyC,MAAM,SAAUzC,KAAKM,OAAQ,CACrJ,EACA,MAAArB,GACE,OAAO,OACL,MACA,CACEyJ,IAAK,YACLjK,MAAO,CACL,aACA,gBAAeuB,KAAKV,WAAa,aAAe,YAChD,CACE,uBAAwBU,KAAKQ,MAAME,YAIzCV,KAAKlB,OAAOY,UAEhB,GACCiJ,EAAI,CAACvH,EAAGC,KACT,MAAM4B,EAAI7B,EAAEwH,WAAaxH,EACzB,IAAK,MAAO8B,EAAGC,KAAM9B,EACnB4B,EAAEC,GAAKC,EACT,OAAOF,CAAC,EACPO,EAAI,CACLrE,KAAM,OACN0J,OAAQ,CAAC,gBAAiB,YAAa,eAAgB,eACvDxJ,MAAO,CACLsC,KAAM,CAAEpC,KAAM,CAACuJ,OAAQC,QAASrJ,QAAS,MACzCuH,QAAS,CAAE1H,KAAM,CAACuJ,OAAQC,QAASrJ,QAAS,GAC5CwH,QAAS,CAAE3H,KAAM,CAACuJ,OAAQC,QAASrJ,QAAS,MAE9CU,KAAM,KAAM,CACV4I,MAAO,CAAC,IAEV,OAAAR,GACExI,KAAKC,UAAUD,KACjB,EACA,aAAAuI,GACEvI,KAAKE,aAAaF,KACpB,EACAuB,QAAS,CACP,MAAAG,CAAON,GACLpB,KAAKgJ,MAAQ5H,CACf,GAEFL,SAAU,CACR,UAAAkI,GACE,OAAOjJ,KAAK2B,MAAsB,IAAd3B,KAAK2B,KAAaqF,WAAWhH,KAAK2B,MAAQ,IAChE,EACA,aAAAuH,GACE,OAAOlC,WAAWhH,KAAKiH,QACzB,EACA,aAAAkC,GACE,OAAOnC,WAAWhH,KAAKkH,QACzB,GAEFgB,MAAO,CACL,UAAAe,CAAW7H,GACTpB,KAAKD,cAAc,CAAE0G,OAAQzG,KAAM2B,KAAMP,GAC3C,EACA,aAAA8H,CAAc9H,GACZpB,KAAKD,cAAc,CAAE0G,OAAQzG,KAAM2C,IAAKvB,GAC1C,EACA,aAAA+H,CAAc/H,GACZpB,KAAKD,cAAc,CAAE0G,OAAQzG,KAAM4C,IAAKxB,GAC1C,IAGJ,SAASgI,EAAEhI,EAAGC,EAAG4B,EAAGC,EAAGC,EAAGgB,GACxB,OAAO,WAAK,QAAE,MAAO,CACnB1F,MAAO,mBACP4K,QAAShI,EAAE,KAAOA,EAAE,GAAMgD,GAAMF,EAAEhE,YAAYkE,EAAGjD,EAAEsF,EAAEC,MACrDqC,OAAO,QAAE5H,EAAE4H,QACV,EACD,QAAE5H,EAAEtC,OAAQ,YACX,EACL,CACA,MAAMwK,EAAoBX,EAAEnF,EAAG,CAAC,CAAC,SAAU4F,K,2/ECRrCG,GAAY,I,oCArTlB,MAAMC,GAAad,EAAAA,EAAAA,IAAI,IACjBe,GAAaf,EAAAA,EAAAA,IAAI,IACjBgB,GAAmBhB,EAAAA,EAAAA,KAAI,GACvBiB,GAAkBjB,EAAAA,EAAAA,KAAI,GACtBkB,GAAiBlB,EAAAA,EAAAA,KAAI,GAErBmB,GAAgBnB,EAAAA,EAAAA,IAAI,IAC1B,IAAIoB,EAAM,wBAEV,MAAMC,EAAcC,UAChB,IACI,MAAMC,QAAYC,EAAAA,EAAMC,IAAIL,GAC5B,IAAIM,EAAYH,EAAI7J,KACpByJ,EAAcQ,MAAQ,IAAIC,EAAgBF,EAAUG,QACxD,CAAE,MAAOC,GACL7E,QAAQ8E,IAAID,EAChB,GAGJ,SAASF,EAAgBlK,GAOrB,OANAA,EAAKqB,SAASiJ,IACVA,EAAKC,eAAiBD,EAAKE,gBAC3BF,EAAKG,eAAiBH,EAAKI,gBAC3BJ,EAAKK,aAAeL,EAAKM,aAAa,IAGnC5K,CACX,EAEA6K,EAAAA,EAAAA,KAAU,KACNlB,GAAa,IAEjB,MAAMmB,GAAeC,EAAAA,EAAAA,IAAS,CAC1BC,MAAO,iBACP9F,SAAU,aASR+F,GAAU3C,EAAAA,EAAAA,MACV4C,GAAgB5C,EAAAA,EAAAA,MAEtB,IAAI6C,GAAQC,EAAAA,EAAMC,MAAMC,YAAYC,gBAEpC9I,YAAW,KACP,GAAc,KAAV0I,GAAc,CACd,IAAIK,EAAOP,EAAQhB,MAAMwB,QAAQN,GAAMR,cAClCa,EAMDE,GAAaF,IALbG,EAAAA,EAAAA,IAAU,CACNC,QAAU,QAAOJ,EAAKxL,KAAKuK,iBAC3BpL,KAAM,WAKlB,IACD,GACHsD,YAAW,KACP+G,EAAeS,OAAQ,CAAK,GAC7B,IAEH,MAAM4B,IAAiBd,EAAAA,EAAAA,IAAS,IAC1Be,IAAgBf,EAAAA,EAAAA,IAAS,IACzBgB,IAAezD,EAAAA,EAAAA,IAAI,IACnB0D,IAAc1D,EAAAA,EAAAA,IAAI,CAAC,GACzB,SAASoD,GAAaF,EAAMlD,EAAM,IAC9BuD,GAAehL,OAAS,EACxBoL,KACY,WAAR3D,IACAkD,EAAOP,EAAQhB,MAAMwB,QAAQD,EAAKxL,KAAK2K,eAG3C,IAAIuB,GAAkB,EACtB,GAAIV,EAAKW,iBACLX,EAAOP,EAAQhB,MAAMwB,QAAQD,EAAKW,uBAC/B,GAAIX,EAAKY,OAAQ,CACpBF,GAAkB,EAClBH,GAAa9B,MAAQ,CAACuB,EAAKY,QAC3B,IAAIlL,EAAKsK,EAAKa,WAAWb,EAAKa,WAAWxL,OAAS,GAAG8J,aACrDa,EAAOP,EAAQhB,MAAMwB,QAAQvK,EACjC,CAEA,SAASoL,EAAed,GACpB,IAAInG,EAAamG,EAAKe,OACtBV,GAAelE,KAAK6D,GACK,IAArBnG,EAAWmH,MACXX,GAAehH,UAEfyH,EAAejH,EAEvB,CAGA,SAASoH,EAAiBjB,GACtBM,GAAcjL,OAAS,EACnB2K,EAAKkB,WAAW7L,QAChB2K,EAAKkB,WAAWrL,SAASsL,IACrBb,GAAcnE,KAAKgF,EAAM,IAG7BnB,EAAKxL,KAAK4M,UAAYV,IACtBH,GAAa9B,MAAQuB,EAAKxL,KAAK4M,QAEvC,CAIA,SAASC,EAAWrB,GACG,IAAfA,EAAKgB,QACLhB,EAAKe,OAAOO,UAAW,EACvBD,EAAWrB,EAAKe,QAExB,CArBAD,EAAed,GAafiB,EAAiBjB,GASL,KAARlD,GAAcyE,GAAY9C,MAAQ,MAClCuB,EAAON,EAAcjB,MAAMwB,QAAQD,EAAKxL,KAAK2K,eAEjDkC,EAAWrB,GACXQ,GAAY/B,MAAQuB,EAAKxL,KACzBgN,IACJ,CAGA,MAAMC,IAAe3E,EAAAA,EAAAA,IAAI,IACzB,SAAS4E,GAAgBC,EAAUC,EAAa,IAC5C,IAAIC,EAAU,GAkDd,GAhDIrI,MAAMsI,QAAQH,IACdA,EAAS9L,SAASiJ,IACd,GAAyB,WAArBlB,EAAWa,MAAoB,CAC/B,IAAIsD,EAAQ,CAAElB,WAAY,IAAIe,EAAY9C,IAC1C,GAAIA,EAAKsC,QAAS,CACd,MAAMb,EAAezB,EAAKsC,QAAQY,QAAQpB,GAC/BA,EAAOqB,WACTC,cACAtH,SAASiD,EAAWY,MAAMyD,iBAEnC,GAAI3B,EAAalL,OAAQ,CACrB,IAAI8M,EAAQ,GACZ5B,EAAa1K,SAAS+K,IAClB,IAAI9B,EAAO,CAAE+B,WAAY,IACzB/B,EAAK+B,WAAakB,EAAMlB,WACxB/B,EAAK8B,OAASA,EACduB,EAAMhG,KAAK2C,EAAK,IAEpB+C,EAAQ1F,QAAQgG,EACpB,CACJ,CACA,GAAIrD,EAAKsD,SAAU,CACf,MAAMC,EAAYX,GACd5C,EAAKsD,SACLL,EAAMlB,YAEVgB,EAAQ1F,QAAQkG,EACpB,CACJ,KAAO,CACH,IAAIN,EAAQ,CAAElB,WAAY,IAAIe,EAAY9C,IAS1C,GAPIA,EAAKC,eACAmD,cACAtH,SAASiD,EAAWY,MAAMyD,iBAE/BH,EAAMpB,iBAAmB7B,EAAKK,aAC9B0C,EAAQ1F,KAAK4F,IAEbjD,EAAKsD,SAAU,CACf,MAAMC,EAAYX,GACd5C,EAAKsD,SACLL,EAAMlB,YAEVgB,EAAQ1F,QAAQkG,EACpB,CACJ,KAGJT,EAAWvM,OAAS,EACpB,OAAOwM,EAEPJ,GAAahD,MAAQoD,CAE7B,CAEA,SAASpB,KACLgB,GAAahD,MAAQ,GACrBZ,EAAWY,MAAQ,GACnB8B,GAAa9B,MAAQ,GACrB+B,GAAY/B,MAAQ,CAAC,CACzB,CAGA,MAAM6D,IAAsBxF,EAAAA,EAAAA,MAC5B,SAAS0E,MACLe,EAAAA,EAAAA,KAAS,KACL,IAAIC,EAAcF,GAAoB7D,MAAMgE,QAAQD,YAChDE,EAAkBJ,GAAoB7D,MAAMgE,QAAQE,YACpDC,EAAaJ,EAAcE,EAC/BJ,GAAoB7D,MAAMoE,SAAS,CAAEhL,KAAM+K,GAAa,GAEhE,CAGA,IAAIE,GAAmB,CACnB,CACIC,WAAY,SACZC,QAAS,eACTC,SAAU,SACVC,MAAO,GACPC,SAAU,QAEd,CACIJ,WAAY,cACZC,QAAS,aACTE,MAAO,GACPC,SAAU,SAEd,CACIJ,WAAY,QACZC,QAAS,YACTC,SAAU,QACVC,MAAO,GACPC,SAAU,SAEd,CACIJ,WAAY,KACZC,QAAS,KACTE,MAAO,GACPC,SAAU,SAEd,CACIJ,WAAY,WACZC,QAAS,aACTE,MAAO,GACPC,SAAU,SAEd,CACIJ,WAAY,kBACZC,QAAS,cACTC,SAAU,SACVC,MAAO,GACPC,SAAU,UAGdC,GAAgB,CAChB,CACIJ,QAAS,eACTK,SAAU,SACVC,QAAS,CACL,CACI7E,MAAO,OACP8E,QAAS,QAEb,CACI9E,MAAO,UACP8E,QAAS,WAEb,CACI9E,MAAO,QACP8E,QAAS,SAEb,CACI9E,MAAO,UACP8E,QAAS,cAMzB,MAAMC,IAAuB1G,EAAAA,EAAAA,IAAI,yBACjC,IAAI2G,GAAgB,CAChB,CACIC,IAAK,OACLC,OAAQ,CAAC,KAAM,aAEnB,CACID,IAAK,aACLC,OAAQ,CAAC,KAAM,aAEnB,CACID,IAAK,WACLC,OAAQ,CAAC,YAGjB,MAAMC,IAAsBzO,EAAAA,EAAAA,KAAS,IAAekL,GAAehL,OAASgL,GAAe,GAAG7L,KAAKuK,eAAiB,SAGpH,SAAS8E,GAAeC,GACpB/J,QAAQ8E,IAAIiF,EAChB,CACA,MAAMC,IAAiBjH,EAAAA,EAAAA,IAAI,IACrBkH,IAAkBlH,EAAAA,EAAAA,MACxB,SAASmH,KACLF,GAAetF,MAAQuF,GAAgBvF,MAAMyF,gBACjD,CACA,SAASC,GAAQC,EAAO1O,GAEpB,IAAI2O,EAAmBpO,SAASqO,eAAe5O,GAC3C6O,EAAatO,SAASyG,iBAAkB,UAC5C6H,EAAW1O,SAAS2O,IAChBA,EAAI7K,UAAU8K,OAAO,WAAW,IAEtB,UAAVL,GACAC,EAAiB1K,UAAUQ,IAAI,WAEvC,CAEA,MAAMuK,IAAa5H,EAAAA,EAAAA,IAAI,MAEvB,SAAS6H,GAAexL,GACpByL,MACAtI,EAAAA,EAAAA,IAAMoI,IAAaG,IACA,cAAXA,GACAV,GAAQ,QAAShL,EACrB,GAER,CACA,SAASyL,KACLF,GAAWjG,MAAQxH,YAAW,KAC1ByN,GAAWjG,MAAQ,WAAW,GAC/Bd,GACP,CACA,SAASmH,KACL3N,aAAauN,GAAWjG,OACxBiG,GAAWjG,MAAQ,IACvB,EACAnC,EAAAA,EAAAA,IAAMkE,IAAY,KACdwD,GAAgBvF,MAAMsG,cAAc,GACtC,CAACxI,MAAK,IAIR,MAAMyI,IAAsBlI,EAAAA,EAAAA,KAAI,GAC1BmI,IAAsBnI,EAAAA,EAAAA,IAAI,IAC1BoI,IAAYpI,EAAAA,EAAAA,IAAI,GAChBqI,IAAqBhQ,EAAAA,EAAAA,KAAS,IAAeiQ,GAAcF,GAAUzG,OAAOlL,OAC5E8R,IAAwBvI,EAAAA,EAAAA,IAAI,IAC5BwI,IAAsBxI,EAAAA,EAAAA,IAAI,IAC1ByI,IAAqBpQ,EAAAA,EAAAA,KAAS,IAAqD,GAAtCkQ,GAAsB5G,MAAMpJ,QAAmD,GAApCiQ,GAAoB7G,MAAMpJ,SAClH+P,IAAgB7F,EAAAA,EAAAA,IAAS,CAC3B,CACIhM,KAAM,aACNiS,WAAWrQ,EAAAA,EAAAA,KAAS,IAAekQ,GAAsB5G,MAAMpJ,UAEnE,CACI9B,KAAM,WACNiS,WAAWrQ,EAAAA,EAAAA,KAAS,IAAemQ,GAAoB7G,MAAMpJ,YAG/DoQ,IAAqB3I,EAAAA,EAAAA,IAAI,IACzB4I,IAAc5I,EAAAA,EAAAA,MACpB,SAAS6I,GAAenR,GACG,GAAnB0Q,GAAUzG,MACV4G,GAAsB5G,MAAQjK,EACJ,GAAnB0Q,GAAUzG,QACjB6G,GAAoB7G,MAAQjK,EAEpC,CACA,SAASoR,GAAqBC,EAAY,IACtC,IAAIC,EAAY,GACZD,EAAUxQ,OAAS,IAEnByQ,EAAYD,EAAUvM,MAAMqG,GAAUA,EAAMZ,iBAAmBoG,GAAmB1G,SAElFqH,EAAU1E,UACV0E,EAAYA,EAAU1E,SAE1BqE,GAAmBhH,MAAQqH,CAE/B,EACAxJ,EAAAA,EAAAA,IAAM2B,GAAgB4G,IAClBe,GAAqBf,EAAO,KAEhCvI,EAAAA,EAAAA,IAAM4I,IAAW,KACbU,GAAqB3H,EAAcQ,MAAM,KAE7CnC,EAAAA,EAAAA,IAAM0I,IAAqBH,IACnBA,GACA5N,YAAW,KACPyO,GAAYjH,MAAMsG,cAAc,GACjC,IACP,GACF,CAACgB,OAAM,IAET,IAAIC,GAAsB,CACtB,CACIjD,WAAY,cACZC,QAAS,aACTE,MAAO,IAGX,CACIH,WAAY,QACZC,QAAS,YACTE,MAAO,KAKf,MAAM+C,IAAanJ,EAAAA,EAAAA,KAAI,GAEvB7F,YAAW,KACPgP,GAAWxH,OAAQ,CAAI,GACzB,KAIF,MAAM8C,IAAczE,EAAAA,EAAAA,IAAIxG,OAAO4P,YACzBC,IAAarJ,EAAAA,EAAAA,IAAI,KAEvB,SAASsJ,KACL7E,GAAY9C,MAAQnI,OAAO4P,WAC3BG,IACJ,CACA,SAASA,KACLhG,GAAehL,OAAS,EACxBiL,GAAcjL,OAAS,EACnBkM,GAAY9C,MAAQ0H,GAAW1H,OAC/BR,EAAcQ,MAAM5I,SAAS8J,IACzB,IAAIK,EAAOP,EAAQhB,MAAMwB,QAAQN,EAAMR,cACvCmB,GAAcnE,KAAK6D,EAAK,GAGpC,CAdA1J,OAAOJ,iBAAiB,SAAUkQ,IAelCnP,WAAWmP,GAAkB,IAC7BE,EAAAA,EAAAA,KAAgB,KACZhQ,OAAOE,oBAAoB,SAAU4P,GAAiB,IAG1D,MAAMG,IAAqBzJ,EAAAA,EAAAA,IAAI,K,OAC/BR,EAAAA,EAAAA,IAAMiF,IAAa,KACXA,GAAY9C,MAAQ0H,GAAW1H,QAC/B8H,GAAmB9H,MAAQ8C,GAAY9C,MAAQ,GACnD,I,4/VCjcJ,MAAM,GAAc,GAEpB,S","sources":["webpack://inefi_cli/./src/components/BigCard.vue","webpack://inefi_cli/./src/components/BigCard.vue?5b39","webpack://inefi_cli/./src/components/BtnComponent.vue?9381","webpack://inefi_cli/./src/components/IconBtn.vue?516f","webpack://inefi_cli/./node_modules/splitpanes/dist/splitpanes.es.js","webpack://inefi_cli/./src/views/deviceManagement/GroupView.vue","webpack://inefi_cli/./src/views/deviceManagement/GroupView.vue?acaf"],"sourcesContent":["<script setup></script>\r\n<template>\r\n    <div class=\"bigcard-component layout-content\">\r\n        <slot name=\"default\"></slot>\r\n    </div>\r\n</template>\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/all.scss\";\r\n.bigcard-component {\r\n    background-color: #fff;\r\n}\r\n@include bstrp(sm) {\r\n    .bigcard-component {\r\n        border-radius: 12px;\r\n        box-shadow: 8px 8px 20px 0px rgba(0, 0, 0, 0.3);\r\n    }\r\n}\r\n</style>\r\n","import { render } from \"./BigCard.vue?vue&type=template&id=e6b93f88\"\nconst script = {}\n\nimport \"./BigCard.vue?vue&type=style&index=0&id=e6b93f88&lang=scss\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import script from \"./BtnComponent.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./BtnComponent.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./BtnComponent.vue?vue&type=style&index=0&id=03e0fd04&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-03e0fd04\"]])\n\nexport default __exports__","import script from \"./IconBtn.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./IconBtn.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./IconBtn.vue?vue&type=style&index=0&id=65511894&lang=scss&scoped=true\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-65511894\"]])\n\nexport default __exports__","import { h as c, openBlock as m, createElementBlock as p, normalizeStyle as z, renderSlot as f } from \"vue\";\nconst M = {\n  name: \"splitpanes\",\n  emits: [\"ready\", \"resize\", \"resized\", \"pane-click\", \"pane-maximize\", \"pane-add\", \"pane-remove\", \"splitter-click\"],\n  props: {\n    horizontal: { type: Boolean },\n    pushOtherPanes: { type: Boolean, default: !0 },\n    dblClickSplitter: { type: Boolean, default: !0 },\n    rtl: { type: Boolean, default: !1 },\n    firstSplitter: { type: Boolean }\n  },\n  provide() {\n    return {\n      requestUpdate: this.requestUpdate,\n      onPaneAdd: this.onPaneAdd,\n      onPaneRemove: this.onPaneRemove,\n      onPaneClick: this.onPaneClick\n    };\n  },\n  data: () => ({\n    container: null,\n    ready: !1,\n    panes: [],\n    touch: {\n      mouseDown: !1,\n      dragging: !1,\n      activeSplitter: null\n    },\n    splitterTaps: {\n      splitter: null,\n      timeoutId: null\n    }\n  }),\n  computed: {\n    panesCount() {\n      return this.panes.length;\n    },\n    indexedPanes() {\n      return this.panes.reduce((e, i) => (e[i.id] = i) && e, {});\n    }\n  },\n  methods: {\n    updatePaneComponents() {\n      this.panes.forEach((e) => {\n        e.update && e.update({\n          [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[e.id].size}%`\n        });\n      });\n    },\n    bindEvents() {\n      document.addEventListener(\"mousemove\", this.onMouseMove, { passive: !1 }), document.addEventListener(\"mouseup\", this.onMouseUp), \"ontouchstart\" in window && (document.addEventListener(\"touchmove\", this.onMouseMove, { passive: !1 }), document.addEventListener(\"touchend\", this.onMouseUp));\n    },\n    unbindEvents() {\n      document.removeEventListener(\"mousemove\", this.onMouseMove, { passive: !1 }), document.removeEventListener(\"mouseup\", this.onMouseUp), \"ontouchstart\" in window && (document.removeEventListener(\"touchmove\", this.onMouseMove, { passive: !1 }), document.removeEventListener(\"touchend\", this.onMouseUp));\n    },\n    onMouseDown(e, i) {\n      this.bindEvents(), this.touch.mouseDown = !0, this.touch.activeSplitter = i;\n    },\n    onMouseMove(e) {\n      this.touch.mouseDown && (e.preventDefault(), this.touch.dragging = !0, this.calculatePanesSize(this.getCurrentMouseDrag(e)), this.$emit(\"resize\", this.panes.map((i) => ({ min: i.min, max: i.max, size: i.size }))));\n    },\n    onMouseUp() {\n      this.touch.dragging && this.$emit(\"resized\", this.panes.map((e) => ({ min: e.min, max: e.max, size: e.size }))), this.touch.mouseDown = !1, setTimeout(() => {\n        this.touch.dragging = !1, this.unbindEvents();\n      }, 100);\n    },\n    onSplitterClick(e, i) {\n      \"ontouchstart\" in window && (e.preventDefault(), this.dblClickSplitter && (this.splitterTaps.splitter === i ? (clearTimeout(this.splitterTaps.timeoutId), this.splitterTaps.timeoutId = null, this.onSplitterDblClick(e, i), this.splitterTaps.splitter = null) : (this.splitterTaps.splitter = i, this.splitterTaps.timeoutId = setTimeout(() => {\n        this.splitterTaps.splitter = null;\n      }, 500)))), this.touch.dragging || this.$emit(\"splitter-click\", this.panes[i]);\n    },\n    onSplitterDblClick(e, i) {\n      let s = 0;\n      this.panes = this.panes.map((n, t) => (n.size = t === i ? n.max : n.min, t !== i && (s += n.min), n)), this.panes[i].size -= s, this.$emit(\"pane-maximize\", this.panes[i]), this.$emit(\"resized\", this.panes.map((n) => ({ min: n.min, max: n.max, size: n.size })));\n    },\n    onPaneClick(e, i) {\n      this.$emit(\"pane-click\", this.indexedPanes[i]);\n    },\n    getCurrentMouseDrag(e) {\n      const i = this.container.getBoundingClientRect(), { clientX: s, clientY: n } = \"ontouchstart\" in window && e.touches ? e.touches[0] : e;\n      return {\n        x: s - i.left,\n        y: n - i.top\n      };\n    },\n    getCurrentDragPercentage(e) {\n      e = e[this.horizontal ? \"y\" : \"x\"];\n      const i = this.container[this.horizontal ? \"clientHeight\" : \"clientWidth\"];\n      return this.rtl && !this.horizontal && (e = i - e), e * 100 / i;\n    },\n    calculatePanesSize(e) {\n      const i = this.touch.activeSplitter;\n      let s = {\n        prevPanesSize: this.sumPrevPanesSize(i),\n        nextPanesSize: this.sumNextPanesSize(i),\n        prevReachedMinPanes: 0,\n        nextReachedMinPanes: 0\n      };\n      const n = 0 + (this.pushOtherPanes ? 0 : s.prevPanesSize), t = 100 - (this.pushOtherPanes ? 0 : s.nextPanesSize), a = Math.max(Math.min(this.getCurrentDragPercentage(e), t), n);\n      let r = [i, i + 1], o = this.panes[r[0]] || null, h = this.panes[r[1]] || null;\n      const l = o.max < 100 && a >= o.max + s.prevPanesSize, u = h.max < 100 && a <= 100 - (h.max + this.sumNextPanesSize(i + 1));\n      if (l || u) {\n        l ? (o.size = o.max, h.size = Math.max(100 - o.max - s.prevPanesSize - s.nextPanesSize, 0)) : (o.size = Math.max(100 - h.max - s.prevPanesSize - this.sumNextPanesSize(i + 1), 0), h.size = h.max);\n        return;\n      }\n      if (this.pushOtherPanes) {\n        const d = this.doPushOtherPanes(s, a);\n        if (!d)\n          return;\n        ({ sums: s, panesToResize: r } = d), o = this.panes[r[0]] || null, h = this.panes[r[1]] || null;\n      }\n      o !== null && (o.size = Math.min(Math.max(a - s.prevPanesSize - s.prevReachedMinPanes, o.min), o.max)), h !== null && (h.size = Math.min(Math.max(100 - a - s.nextPanesSize - s.nextReachedMinPanes, h.min), h.max));\n    },\n    doPushOtherPanes(e, i) {\n      const s = this.touch.activeSplitter, n = [s, s + 1];\n      return i < e.prevPanesSize + this.panes[n[0]].min && (n[0] = this.findPrevExpandedPane(s).index, e.prevReachedMinPanes = 0, n[0] < s && this.panes.forEach((t, a) => {\n        a > n[0] && a <= s && (t.size = t.min, e.prevReachedMinPanes += t.min);\n      }), e.prevPanesSize = this.sumPrevPanesSize(n[0]), n[0] === void 0) ? (e.prevReachedMinPanes = 0, this.panes[0].size = this.panes[0].min, this.panes.forEach((t, a) => {\n        a > 0 && a <= s && (t.size = t.min, e.prevReachedMinPanes += t.min);\n      }), this.panes[n[1]].size = 100 - e.prevReachedMinPanes - this.panes[0].min - e.prevPanesSize - e.nextPanesSize, null) : i > 100 - e.nextPanesSize - this.panes[n[1]].min && (n[1] = this.findNextExpandedPane(s).index, e.nextReachedMinPanes = 0, n[1] > s + 1 && this.panes.forEach((t, a) => {\n        a > s && a < n[1] && (t.size = t.min, e.nextReachedMinPanes += t.min);\n      }), e.nextPanesSize = this.sumNextPanesSize(n[1] - 1), n[1] === void 0) ? (e.nextReachedMinPanes = 0, this.panes[this.panesCount - 1].size = this.panes[this.panesCount - 1].min, this.panes.forEach((t, a) => {\n        a < this.panesCount - 1 && a >= s + 1 && (t.size = t.min, e.nextReachedMinPanes += t.min);\n      }), this.panes[n[0]].size = 100 - e.prevPanesSize - e.nextReachedMinPanes - this.panes[this.panesCount - 1].min - e.nextPanesSize, null) : { sums: e, panesToResize: n };\n    },\n    sumPrevPanesSize(e) {\n      return this.panes.reduce((i, s, n) => i + (n < e ? s.size : 0), 0);\n    },\n    sumNextPanesSize(e) {\n      return this.panes.reduce((i, s, n) => i + (n > e + 1 ? s.size : 0), 0);\n    },\n    findPrevExpandedPane(e) {\n      return [...this.panes].reverse().find((s) => s.index < e && s.size > s.min) || {};\n    },\n    findNextExpandedPane(e) {\n      return this.panes.find((s) => s.index > e + 1 && s.size > s.min) || {};\n    },\n    checkSplitpanesNodes() {\n      Array.from(this.container.children).forEach((i) => {\n        const s = i.classList.contains(\"splitpanes__pane\"), n = i.classList.contains(\"splitpanes__splitter\");\n        !s && !n && (i.parentNode.removeChild(i), console.warn(\"Splitpanes: Only <pane> elements are allowed at the root of <splitpanes>. One of your DOM nodes was removed.\"));\n      });\n    },\n    addSplitter(e, i, s = !1) {\n      const n = e - 1, t = document.createElement(\"div\");\n      t.classList.add(\"splitpanes__splitter\"), s || (t.onmousedown = (a) => this.onMouseDown(a, n), typeof window < \"u\" && \"ontouchstart\" in window && (t.ontouchstart = (a) => this.onMouseDown(a, n)), t.onclick = (a) => this.onSplitterClick(a, n + 1)), this.dblClickSplitter && (t.ondblclick = (a) => this.onSplitterDblClick(a, n + 1)), i.parentNode.insertBefore(t, i);\n    },\n    removeSplitter(e) {\n      e.onmousedown = void 0, e.onclick = void 0, e.ondblclick = void 0, e.parentNode.removeChild(e);\n    },\n    redoSplitters() {\n      const e = Array.from(this.container.children);\n      e.forEach((s) => {\n        s.className.includes(\"splitpanes__splitter\") && this.removeSplitter(s);\n      });\n      let i = 0;\n      e.forEach((s) => {\n        s.className.includes(\"splitpanes__pane\") && (!i && this.firstSplitter ? this.addSplitter(i, s, !0) : i && this.addSplitter(i, s), i++);\n      });\n    },\n    requestUpdate({ target: e, ...i }) {\n      const s = this.indexedPanes[e._.uid];\n      Object.entries(i).forEach(([n, t]) => s[n] = t);\n    },\n    onPaneAdd(e) {\n      let i = -1;\n      Array.from(e.$el.parentNode.children).some((t) => (t.className.includes(\"splitpanes__pane\") && i++, t === e.$el));\n      const s = parseFloat(e.minSize), n = parseFloat(e.maxSize);\n      this.panes.splice(i, 0, {\n        id: e._.uid,\n        index: i,\n        min: isNaN(s) ? 0 : s,\n        max: isNaN(n) ? 100 : n,\n        size: e.size === null ? null : parseFloat(e.size),\n        givenSize: e.size,\n        update: e.update\n      }), this.panes.forEach((t, a) => t.index = a), this.ready && this.$nextTick(() => {\n        this.redoSplitters(), this.resetPaneSizes({ addedPane: this.panes[i] }), this.$emit(\"pane-add\", { index: i, panes: this.panes.map((t) => ({ min: t.min, max: t.max, size: t.size })) });\n      });\n    },\n    onPaneRemove(e) {\n      const i = this.panes.findIndex((n) => n.id === e._.uid), s = this.panes.splice(i, 1)[0];\n      this.panes.forEach((n, t) => n.index = t), this.$nextTick(() => {\n        this.redoSplitters(), this.resetPaneSizes({ removedPane: { ...s, index: i } }), this.$emit(\"pane-remove\", { removed: s, panes: this.panes.map((n) => ({ min: n.min, max: n.max, size: n.size })) });\n      });\n    },\n    resetPaneSizes(e = {}) {\n      !e.addedPane && !e.removedPane ? this.initialPanesSizing() : this.panes.some((i) => i.givenSize !== null || i.min || i.max < 100) ? this.equalizeAfterAddOrRemove(e) : this.equalize(), this.ready && this.$emit(\"resized\", this.panes.map((i) => ({ min: i.min, max: i.max, size: i.size })));\n    },\n    equalize() {\n      const e = 100 / this.panesCount;\n      let i = 0;\n      const s = [], n = [];\n      this.panes.forEach((t) => {\n        t.size = Math.max(Math.min(e, t.max), t.min), i -= t.size, t.size >= t.max && s.push(t.id), t.size <= t.min && n.push(t.id);\n      }), i > 0.1 && this.readjustSizes(i, s, n);\n    },\n    initialPanesSizing() {\n      let e = 100;\n      const i = [], s = [];\n      let n = 0;\n      this.panes.forEach((a) => {\n        e -= a.size, a.size !== null && n++, a.size >= a.max && i.push(a.id), a.size <= a.min && s.push(a.id);\n      });\n      let t = 100;\n      e > 0.1 && (this.panes.forEach((a) => {\n        a.size === null && (a.size = Math.max(Math.min(e / (this.panesCount - n), a.max), a.min)), t -= a.size;\n      }), t > 0.1 && this.readjustSizes(e, i, s));\n    },\n    equalizeAfterAddOrRemove({ addedPane: e, removedPane: i } = {}) {\n      let s = 100 / this.panesCount, n = 0;\n      const t = [], a = [];\n      e && e.givenSize !== null && (s = (100 - e.givenSize) / (this.panesCount - 1)), this.panes.forEach((r) => {\n        n -= r.size, r.size >= r.max && t.push(r.id), r.size <= r.min && a.push(r.id);\n      }), !(Math.abs(n) < 0.1) && (this.panes.forEach((r) => {\n        e && e.givenSize !== null && e.id === r.id || (r.size = Math.max(Math.min(s, r.max), r.min)), n -= r.size, r.size >= r.max && t.push(r.id), r.size <= r.min && a.push(r.id);\n      }), n > 0.1 && this.readjustSizes(n, t, a));\n    },\n    readjustSizes(e, i, s) {\n      let n;\n      e > 0 ? n = e / (this.panesCount - i.length) : n = e / (this.panesCount - s.length), this.panes.forEach((t, a) => {\n        if (e > 0 && !i.includes(t.id)) {\n          const r = Math.max(Math.min(t.size + n, t.max), t.min), o = r - t.size;\n          e -= o, t.size = r;\n        } else if (!s.includes(t.id)) {\n          const r = Math.max(Math.min(t.size + n, t.max), t.min), o = r - t.size;\n          e -= o, t.size = r;\n        }\n        t.update({\n          [this.horizontal ? \"height\" : \"width\"]: `${this.indexedPanes[t.id].size}%`\n        });\n      }), Math.abs(e) > 0.1 && this.$nextTick(() => {\n        this.ready && console.warn(\"Splitpanes: Could not resize panes correctly due to their constraints.\");\n      });\n    }\n  },\n  watch: {\n    panes: {\n      deep: !0,\n      immediate: !1,\n      handler() {\n        this.updatePaneComponents();\n      }\n    },\n    horizontal() {\n      this.updatePaneComponents();\n    },\n    firstSplitter() {\n      this.redoSplitters();\n    },\n    dblClickSplitter(e) {\n      [...this.container.querySelectorAll(\".splitpanes__splitter\")].forEach((s, n) => {\n        s.ondblclick = e ? (t) => this.onSplitterDblClick(t, n) : void 0;\n      });\n    }\n  },\n  beforeUnmount() {\n    this.ready = !1;\n  },\n  mounted() {\n    this.container = this.$refs.container, this.checkSplitpanesNodes(), this.redoSplitters(), this.resetPaneSizes(), this.$emit(\"ready\"), this.ready = !0;\n  },\n  render() {\n    return c(\n      \"div\",\n      {\n        ref: \"container\",\n        class: [\n          \"splitpanes\",\n          `splitpanes--${this.horizontal ? \"horizontal\" : \"vertical\"}`,\n          {\n            \"splitpanes--dragging\": this.touch.dragging\n          }\n        ]\n      },\n      this.$slots.default()\n    );\n  }\n}, S = (e, i) => {\n  const s = e.__vccOpts || e;\n  for (const [n, t] of i)\n    s[n] = t;\n  return s;\n}, x = {\n  name: \"pane\",\n  inject: [\"requestUpdate\", \"onPaneAdd\", \"onPaneRemove\", \"onPaneClick\"],\n  props: {\n    size: { type: [Number, String], default: null },\n    minSize: { type: [Number, String], default: 0 },\n    maxSize: { type: [Number, String], default: 100 }\n  },\n  data: () => ({\n    style: {}\n  }),\n  mounted() {\n    this.onPaneAdd(this);\n  },\n  beforeUnmount() {\n    this.onPaneRemove(this);\n  },\n  methods: {\n    update(e) {\n      this.style = e;\n    }\n  },\n  computed: {\n    sizeNumber() {\n      return this.size || this.size === 0 ? parseFloat(this.size) : null;\n    },\n    minSizeNumber() {\n      return parseFloat(this.minSize);\n    },\n    maxSizeNumber() {\n      return parseFloat(this.maxSize);\n    }\n  },\n  watch: {\n    sizeNumber(e) {\n      this.requestUpdate({ target: this, size: e });\n    },\n    minSizeNumber(e) {\n      this.requestUpdate({ target: this, min: e });\n    },\n    maxSizeNumber(e) {\n      this.requestUpdate({ target: this, max: e });\n    }\n  }\n};\nfunction P(e, i, s, n, t, a) {\n  return m(), p(\"div\", {\n    class: \"splitpanes__pane\",\n    onClick: i[0] || (i[0] = (r) => a.onPaneClick(r, e._.uid)),\n    style: z(e.style)\n  }, [\n    f(e.$slots, \"default\")\n  ], 4);\n}\nconst g = /* @__PURE__ */ S(x, [[\"render\", P]]);\nexport {\n  g as Pane,\n  M as Splitpanes\n};\n","<script setup>\r\nimport { ArrowRight } from \"@element-plus/icons-vue\";\r\nimport { Search } from \"@element-plus/icons-vue\";\r\nimport { Plus } from \"@element-plus/icons-vue\";\r\nimport { FolderAdd } from \"@element-plus/icons-vue\";\r\nimport { EditPen } from \"@element-plus/icons-vue\";\r\nimport { Delete } from \"@element-plus/icons-vue\";\r\n\r\nimport BigCard from \"@/components/BigCard.vue\";\r\nimport BtnComponent from \"@/components/BtnComponent.vue\";\r\nimport IconBtn from \"@/components/IconBtn.vue\";\r\nimport IconCircleBtn from \"@/components/IconCircleBtn.vue\";\r\nimport InefiVirtualTable from \"@/components/InefiVirtualTable.vue\";\r\nimport { nextTick, ref, reactive, watch, onBeforeUnmount } from \"vue\";\r\nimport { onMounted } from \"vue\";\r\nimport { computed } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { Splitpanes, Pane } from \"splitpanes\";\r\nimport \"splitpanes/dist/splitpanes.css\";\r\n\r\nconst searchType = ref(\"\");\r\nconst searchText = ref(\"\");\r\nconst searchInputFocus = ref(false);\r\nconst searchInputOpen = ref(false);\r\nconst treeDrawerOpen = ref(false);\r\n\r\nconst groupTreeData = ref([]);\r\nlet url = \"/data/group_tree.json\";\r\n// let url = \"/data/group_tree_moreData.json\";\r\nconst getTreeData = async () => {\r\n    try {\r\n        const res = await axios.get(url);\r\n        let inefiData = res.data;\r\n        groupTreeData.value = [...orgnizeTreeData(inefiData.result)];\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n}\r\n\r\nfunction orgnizeTreeData(data) {\r\n    data.forEach((item) => {\r\n        item.slaveGroupName = item.masterGroupName;\r\n        item.slaveGroupUUID = item.masterGroupUUID;\r\n        item.slaveGroupId = item.masterGroupId;\r\n    });\r\n\r\n    return data;\r\n}\r\n\r\nonMounted(() => {\r\n    getTreeData();\r\n})\r\nconst defaultProps = reactive({\r\n    label: \"slaveGroupName\",\r\n    children: \"subgroup\",\r\n});\r\n\r\n//一進來先抓store.state.checkSlaveGroupId\r\n//找不到群組跳通知\r\nimport store from \"@/store\";\r\n\r\nimport { ElMessage } from \"element-plus\";\r\n\r\nconst treeRef = ref();\r\nconst treeRefMobile = ref();\r\n\r\nlet group = store.state.groupHealth.checkSlaveGroup;\r\n\r\nsetTimeout(() => {\r\n    if (group !== \"\") {\r\n        let node = treeRef.value.getNode(group.slaveGroupId);\r\n        if (!node) {\r\n            ElMessage({\r\n                message: `找不到群組${node.data.slaveGroupName}`,\r\n                type: \"warning\",\r\n            });\r\n        } else {\r\n            showNodeData(node);\r\n        }\r\n    }\r\n}, 1);\r\nsetTimeout(() => {\r\n    treeDrawerOpen.value = false;\r\n}, 10);\r\n//node變化\r\nconst breadCrumbList = reactive([]);\r\nconst groupChildren = reactive([]);\r\nconst deviceResult = ref([]);\r\nconst currentNode = ref({});\r\nfunction showNodeData(node, ref = \"\") {\r\n    breadCrumbList.length = 0;\r\n    clearResult();\r\n    if (ref === \"mobile\") {\r\n        node = treeRef.value.getNode(node.data.slaveGroupId);\r\n    }\r\n\r\n    let triggerIsDevice = false\r\n    if (node.nodeSlaveGroupId) {\r\n        node = treeRef.value.getNode(node.nodeSlaveGroupId);\r\n    } else if (node.device) {\r\n        triggerIsDevice = true\r\n        deviceResult.value = [node.device];\r\n        let id = node.breadCrumb[node.breadCrumb.length - 1].slaveGroupId;\r\n        node = treeRef.value.getNode(id);\r\n    }\r\n\r\n    function pushBreadcrumb(node) {\r\n        let parentNode = node.parent;\r\n        breadCrumbList.push(node);\r\n        if (parentNode.level === 0) {\r\n            breadCrumbList.reverse();\r\n        } else {\r\n            pushBreadcrumb(parentNode);\r\n        }\r\n    }\r\n    pushBreadcrumb(node);\r\n\r\n    function setGroupChildren(node) {\r\n        groupChildren.length = 0;\r\n        if (node.childNodes.length) {\r\n            node.childNodes.forEach((child) => {\r\n                groupChildren.push(child);\r\n            });\r\n        }\r\n        if (node.data.devices && !triggerIsDevice) {\r\n            deviceResult.value = node.data.devices;\r\n        }\r\n    }\r\n    setGroupChildren(node);\r\n\r\n    //展開node\r\n    function expandTree(node) {\r\n        if (node.level !== 0) {\r\n            node.parent.expanded = true;\r\n            expandTree(node.parent);\r\n        }\r\n    }\r\n    if (ref === \"\" && windowWidth.value < 576) {\r\n        node = treeRefMobile.value.getNode(node.data.slaveGroupId);\r\n    }\r\n    expandTree(node);\r\n    currentNode.value = node.data;\r\n    scrollbarToRight();\r\n}\r\n\r\n//搜尋群組\r\nconst searchResult = ref([]);\r\nfunction searchGroupData(treeData, parentItem = []) {\r\n    let results = [];\r\n\r\n    if (Array.isArray(treeData)) {\r\n        treeData.forEach((item) => {\r\n            if (searchType.value === \"device\") {\r\n                let items = { breadCrumb: [...parentItem, item] };\r\n                if (item.devices) {\r\n                    const deviceResult = item.devices.filter((device) => {\r\n                        return device.deviceName\r\n                            .toLowerCase()\r\n                            .includes(searchText.value.toLowerCase());\r\n                    });\r\n                    if (deviceResult.length) {\r\n                        let Items = [];\r\n                        deviceResult.forEach((device) => {\r\n                            let item = { breadCrumb: [] };\r\n                            item.breadCrumb = items.breadCrumb;\r\n                            item.device = device;\r\n                            Items.push(item);\r\n                        });\r\n                        results.push(...Items);\r\n                    }\r\n                }\r\n                if (item.subgroup) {\r\n                    const subResult = searchGroupData(\r\n                        item.subgroup,\r\n                        items.breadCrumb\r\n                    );\r\n                    results.push(...subResult);\r\n                }\r\n            } else {\r\n                let items = { breadCrumb: [...parentItem, item] };\r\n                if (\r\n                    item.slaveGroupName\r\n                        .toLowerCase()\r\n                        .includes(searchText.value.toLowerCase())\r\n                ) {\r\n                    items.nodeSlaveGroupId = item.slaveGroupId;\r\n                    results.push(items);\r\n                }\r\n                if (item.subgroup) {\r\n                    const subResult = searchGroupData(\r\n                        item.subgroup,\r\n                        items.breadCrumb\r\n                    );\r\n                    results.push(...subResult);\r\n                }\r\n            }\r\n        });\r\n    }\r\n    if (parentItem.length > 0) {\r\n        return results;\r\n    } else {\r\n        searchResult.value = results;\r\n    }\r\n}\r\n\r\nfunction clearResult() {\r\n    searchResult.value = [];\r\n    searchText.value = \"\";\r\n    deviceResult.value = []\r\n    currentNode.value = {};\r\n}\r\n\r\n\r\nconst breadCrumbScrollbar = ref();\r\nfunction scrollbarToRight() {\r\n    nextTick(() => {\r\n        let scrollWidth = breadCrumbScrollbar.value.wrapRef.scrollWidth;\r\n        let scrollShowWidth = breadCrumbScrollbar.value.wrapRef.clientWidth;\r\n        let scrollLeft = scrollWidth - scrollShowWidth;\r\n        breadCrumbScrollbar.value.scrollTo({ left: scrollLeft });\r\n    });\r\n}\r\n\r\n//device list\r\nlet deviceTableProps = [\r\n    {\r\n        columnName: \"Status\",\r\n        dataKey: \"healthStatus\",\r\n        slotName: \"status\",\r\n        width: 10,\r\n        minWidth: '80px'\r\n    },\r\n    {\r\n        columnName: \"Device Name\",\r\n        dataKey: \"deviceName\",\r\n        width: 30,\r\n        minWidth: '200px',\r\n    },\r\n    {\r\n        columnName: \"Label\",\r\n        dataKey: \"aliasName\",\r\n        slotName: \"label\",\r\n        width: 25,\r\n        minWidth: '150px',\r\n    },\r\n    {\r\n        columnName: \"SN\",\r\n        dataKey: \"sn\",\r\n        width: 20,\r\n        minWidth: '140px'\r\n    },\r\n    {\r\n        columnName: \"Mac Addr\",\r\n        dataKey: \"macAddress\",\r\n        width: 20,\r\n        minWidth: '140px'\r\n    },\r\n    {\r\n        columnName: \"Enrolled Status\",\r\n        dataKey: \"deviceState\",\r\n        slotName: \"enroll\",\r\n        width: 20,\r\n        minWidth: '130px'\r\n    }\r\n]\r\nlet filterOptions = [\r\n    {\r\n        dataKey: 'healthStatus',\r\n        typeName: 'Status',\r\n        options: [\r\n            {\r\n                value: 'GOOD',\r\n                valName: 'Good'\r\n            },\r\n            {\r\n                value: 'WARNING',\r\n                valName: 'Warning'\r\n            },\r\n            {\r\n                value: 'ERROR',\r\n                valName: 'Error'\r\n            },\r\n            {\r\n                value: 'UNKNOWN',\r\n                valName: 'Unknown'\r\n            },\r\n        ]\r\n    },\r\n]\r\n\r\nconst deviceTooltipContent = ref('Double click to edit.')\r\nlet columnsExcept = [\r\n    {\r\n        tab: \"MAIN\",\r\n        except: [\"SN\", \"Mac Addr\"]\r\n    },\r\n    {\r\n        tab: \"UNASSIGNED\",\r\n        except: [\"SN\", \"Mac Addr\"]\r\n    },\r\n    {\r\n        tab: \"INACTIVE\",\r\n        except: [\"Status\"]\r\n    }\r\n]\r\nconst deviceListActiveTab = computed(() => { return breadCrumbList.length ? breadCrumbList[0].data.slaveGroupName : \"MAIN\" })\r\n\r\n\r\nfunction getFilterParam(param) {\r\n    console.log(param);\r\n}\r\nconst devicesChecked = ref([])\r\nconst deviceListTable = ref()\r\nfunction getDeviceCheckedData() {\r\n    devicesChecked.value = deviceListTable.value.getCheckedData()\r\n}\r\nfunction canEdit(event, id) {\r\n    // console.log(event);\r\n    let triggerDeviceDOM = document.getElementById(id);\r\n    let deviceDOMs = document.querySelectorAll(`.label`);\r\n    deviceDOMs.forEach((DOM) => {\r\n        DOM.classList.remove(\"can_edit\");\r\n    });\r\n    if (event === \"click\") {\r\n        triggerDeviceDOM.classList.add(\"can_edit\");\r\n    }\r\n}\r\n//手機版長按編輯標籤\r\nconst touchTimer = ref(null);\r\nconst touchTime = 800;\r\nfunction thisTouchStart(index) {\r\n    touchstart();\r\n    watch(touchTimer, (newVal) => {\r\n        if (newVal === \"longpress\") {\r\n            canEdit(\"click\", index);\r\n        }\r\n    });\r\n}\r\nfunction touchstart() {\r\n    touchTimer.value = setTimeout(() => {\r\n        touchTimer.value = \"longpress\";\r\n    }, touchTime);\r\n}\r\nfunction clearTouchTimer() {\r\n    clearTimeout(touchTimer.value);\r\n    touchTimer.value = null;\r\n}\r\nwatch(currentNode,()=>{\r\n    deviceListTable.value.clearChecked()\r\n},{deep:true})\r\n\r\n\r\n//add device\r\nconst addDeviceDialogOpen = ref(false)\r\nconst searchAddDeviceText = ref(\"\")\r\nconst activeTab = ref(0)\r\nconst adddeviceActiveTab = computed(() => { return addDeviceTabs[activeTab.value].name })\r\nconst checkedUnassignedList = ref([])\r\nconst checkedInactiveList = ref([])\r\nconst hasNoDeviceChecked = computed(() => { return checkedUnassignedList.value.length == 0 && checkedInactiveList.value.length == 0 })\r\nconst addDeviceTabs = reactive([\r\n    {\r\n        name: \"UNASSIGNED\",\r\n        addAmount: computed(() => { return checkedUnassignedList.value.length })\r\n    },\r\n    {\r\n        name: \"INACTIVE\",\r\n        addAmount: computed(() => { return checkedInactiveList.value.length })\r\n    }\r\n])\r\nconst addDeviceAllResult = ref([])\r\nconst deviceTable = ref()\r\nfunction addDeviceCheck(data) {\r\n    if (activeTab.value == 0) {\r\n        checkedUnassignedList.value = data\r\n    } else if (activeTab.value == 1) {\r\n        checkedInactiveList.value = data\r\n    }\r\n}\r\nfunction addDeviceAllOrganize(groupdata = []) {\r\n    let allResult = []\r\n    if (groupdata.length > 0) {\r\n\r\n        allResult = groupdata.find((group) => group.slaveGroupName === adddeviceActiveTab.value)\r\n    }\r\n    if (allResult.devices) {\r\n        allResult = allResult.devices\r\n    }\r\n    addDeviceAllResult.value = allResult\r\n\r\n}\r\nwatch(groupTreeData, (newVal) => {\r\n    addDeviceAllOrganize(newVal)\r\n})\r\nwatch(activeTab, () => {\r\n    addDeviceAllOrganize(groupTreeData.value)\r\n})\r\nwatch(addDeviceDialogOpen,(newVal)=>{\r\n    if(!newVal){\r\n        setTimeout(() => {\r\n            deviceTable.value.clearChecked()\r\n        }, 500);\r\n    }\r\n},{deewp:true})\r\n\r\nlet addDeviceTableProps = [\r\n    {\r\n        columnName: \"Device Name\",\r\n        dataKey: \"deviceName\",\r\n        width: 50,\r\n        // fixed:true\r\n    },\r\n    {\r\n        columnName: \"Label\",\r\n        dataKey: \"aliasName\",\r\n        width: 50,\r\n    },\r\n]\r\n\r\n//loading\r\nconst loadingEnd = ref(false)\r\n\r\nsetTimeout(()=>{\r\n    loadingEnd.value = true\r\n},1000)\r\n\r\n\r\n//RWD\r\nconst windowWidth = ref(window.innerWidth);\r\nconst mobileSize = ref(576);\r\nwindow.addEventListener(\"resize\", watchWindowWidth);\r\nfunction watchWindowWidth() {\r\n    windowWidth.value = window.innerWidth;\r\n    isMoblieGroupChildren();\r\n}\r\nfunction isMoblieGroupChildren() {\r\n    breadCrumbList.length = 0;\r\n    groupChildren.length = 0;\r\n    if (windowWidth.value < mobileSize.value) {\r\n        groupTreeData.value.forEach((group) => {\r\n            let node = treeRef.value.getNode(group.slaveGroupId);\r\n            groupChildren.push(node);\r\n        });\r\n    }\r\n}\r\nsetTimeout(watchWindowWidth, 1);\r\nonBeforeUnmount(() => {\r\n    window.removeEventListener(\"resize\", watchWindowWidth);\r\n});\r\n\r\nconst searchPopoverWidth = ref(400);\r\nwatch(windowWidth, () => {\r\n    if (windowWidth.value < mobileSize.value) {\r\n        searchPopoverWidth.value = windowWidth.value - 20;\r\n    }\r\n});\r\n</script>\r\n<template>\r\n    <div class=\"layout-content\">\r\n        <div class=\"group_function_bar d-flex align-items-center mb-sm-3 px-3 py-1 p-sm-0\">\r\n            <el-scrollbar class=\"d-sm-none\" ref=\"breadCrumbScrollbar\" v-show=\"!searchInputOpen\">\r\n                <div class=\"bread_crumb d-flex align-items-center d-sm-none\">\r\n                    <IconBtn iconClass=\"fa-solid fa-house\" @click=\"isMoblieGroupChildren\" />\r\n                    <el-breadcrumb :separator-icon=\"ArrowRight\" class=\"ms-2\">\r\n                        <el-breadcrumb-item v-for=\"item in breadCrumbList\" :key=\"`path-${item}`\">\r\n                            <a href=\"\" class=\"text-nowrap\" @click.prevent=\"showNodeData(item)\">{{ item.data.slaveGroupName }}</a>\r\n                        </el-breadcrumb-item>\r\n                    </el-breadcrumb>\r\n                </div>\r\n            </el-scrollbar>\r\n            <IconCircleBtn iconClass=\"fa-solid fa-arrows-rotate\" class=\"order-sm-2 ms-sm-auto d-none d-sm-block\" />\r\n            <div class=\"order-sm-3 d-flex justify-content-end align-items-center\">\r\n                <IconBtn class=\"d-sm-none\" iconClass=\"fa-solid fa-magnifying-glass\" @click=\"searchInputOpen = true\" v-show=\"!searchInputOpen\" />\r\n                <IconBtn class=\"d-sm-none\" iconClass=\"fa-solid fa-xmark\" @click=\"searchInputOpen = false\" v-show=\"searchInputOpen\" />\r\n                <div class=\"search-input ms-sm-3\" :class=\"{ open: searchInputOpen }\">\r\n                    <el-popover :width=\"searchPopoverWidth\" :visible=\"searchInputFocus && searchText !== ''\" popper-class=\"search_result\">\r\n                        <template #reference>\r\n                            <el-input v-model=\"searchText\" size=\"large\" placeholder=\"Please Input\" :prefix-icon=\"Search\" @input=\"searchGroupData(groupTreeData)\" @focus=\"searchInputFocus = true\" @blur=\"searchInputFocus = false\">\r\n                                <template #prepend>\r\n                                    <el-select v-model=\"searchType\" placeholder=\"群組\" style=\"width: 115px\" @change=\"searchResult = []; searchText = ''\" size=\"large\">\r\n                                        <el-option label=\"群組\" value=\"group\" />\r\n                                        <el-option label=\"裝置\" value=\"device\" />\r\n                                    </el-select>\r\n                                </template>\r\n                            </el-input>\r\n                        </template>\r\n                        <div class=\"layout-content overflow-auto\" style=\"max-height: 50vh\">\r\n                            <div class=\"p-4 text-center\" v-if=\"searchResult.length == 0\">\r\n                                查無資料\r\n                            </div>\r\n                            <ul class=\"list-unstyled m-0\" v-if=\"searchResult.length > 0\">\r\n                                <li v-for=\"(item, index) in searchResult\" :key=\"index\" class=\"px-2\">\r\n                                    <a href=\"\" class=\"py-3 border-b d-flex align-items-center\" @click.prevent=\"showNodeData(item); searchInputOpen = false;\">\r\n                                        <template v-if=\"searchType !== 'device'\">\r\n                                            <span class=\"me-2\">\r\n                                                <font-awesome-icon icon=\"fa-solid fa-folder\" class=\"active\" size=\"lg\" />\r\n                                            </span>\r\n                                            <div>\r\n                                                <span class=\"active\">{{ item.breadCrumb[item.breadCrumb.length - 1].slaveGroupName }}</span>\r\n                                                <p class=\"m-0\">\r\n                                                    <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n                                                        <el-breadcrumb-item v-for=\"crumb in item.breadCrumb\" :key=\"crumb.slaveGroupId\">\r\n                                                            <template v-slot:default>\r\n                                                                <span class=\"fs-7\">{{ crumb.slaveGroupName }}</span>\r\n                                                            </template>\r\n                                                        </el-breadcrumb-item>\r\n                                                    </el-breadcrumb>\r\n                                                </p>\r\n                                            </div>\r\n                                        </template>\r\n                                        <template v-else-if=\"searchType === 'device'\">\r\n                                            <span class=\"highLight\">{{ item.device.deviceName }}</span>\r\n                                        </template>\r\n                                    </a>\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                    </el-popover>\r\n                </div>\r\n            </div>\r\n            <div class=\"action-btn order-sm-1 felx-shirnk-0 me-sm-3\">\r\n                <el-dropdown trigger=\"click\" placement=\"bottom-start\">\r\n                    <div>\r\n                        <div class=\"d-none d-sm-block\">\r\n                            <BtnComponent content=\"Action\" iconClass=\"fa-solid fa-caret-right\" iconSize=\"lg\" />\r\n                        </div>\r\n                        <div class=\"d-block d-sm-none\">\r\n                            <IconBtn iconClass=\"fa-solid fa-ellipsis-vertical\" />\r\n                        </div>\r\n                    </div>\r\n                    <template #dropdown>\r\n                        <el-dropdown-menu>\r\n                            <el-dropdown-item :icon=\"FolderAdd\">\r\n                                <span>Create New Group</span>\r\n                            </el-dropdown-item>\r\n                            <el-dropdown-item :icon=\"Plus\" @click=\"addDeviceDialogOpen = true\">\r\n                                <span>Add Device</span>\r\n                            </el-dropdown-item>\r\n                            <el-dropdown-item :icon=\"EditPen\" divided>\r\n                                <span>Rename Group</span>\r\n                            </el-dropdown-item>\r\n                            <el-dropdown-item :icon=\"Delete\">\r\n                                <span>Remove Group</span>\r\n                            </el-dropdown-item>\r\n                        </el-dropdown-menu>\r\n                    </template>\r\n                </el-dropdown>\r\n                <el-dialog v-model=\"addDeviceDialogOpen\" top=\"5vh\" width=\"60%\" class=\"pop_dialog\" :show-close=\"false\">\r\n                    <template #header>\r\n                        <span class=\"fs-4\">Add Device</span>\r\n                    </template>\r\n                    <div class=\"layout-content addDevice_dialog-body\">\r\n                        <div class=\"adddevice-searchbar row px-4\">\r\n                            <div class=\"col-6 col-sm-8\">\r\n                                <p>Select device and add to <span class=\"fw-bold\">{{ currentNode.slaveGroupName }}</span></p>\r\n                            </div>\r\n                            <div class=\"col-6 col-sm-4\">\r\n                                <div class=\"d-flex align-items-center\">\r\n                                    <font-awesome-icon icon=\"fa-solid fa-magnifying-glass\" />\r\n                                    <el-input class=\"ms-3\" v-model=\"searchAddDeviceText\" placeholder=\"Search\" />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <ul class=\"custom-tabs mb-2\">\r\n                            <li class=\"custom-tab\" v-for=\"(item, index) in addDeviceTabs\" :key=\"index\" :class=\"{ 'active': activeTab == index }\" @click=\"activeTab = index\">\r\n                                <span class=\"me-2\">{{ item.name }}</span>\r\n                                <span class=\"adddevice-tab__number py-2 px-1\">{{ item.addAmount }}</span>\r\n                            </li>\r\n                        </ul>\r\n                        <div class=\"device-result w-100 py-2 px-3 layout-content\">\r\n                            <InefiVirtualTable ref=\"deviceTable\" :item-size=\"54\" :table-props=\"addDeviceTableProps\" \r\n                            :items=\"addDeviceAllResult\" :showCheckBox=\"true\" :searchShow=\"false\" key-field=\"deviceId\" \r\n                            :tooltipModel=\"addDeviceDialogOpen\" :searchText=\"searchAddDeviceText\" @clearSearch=\"searchAddDeviceText = ''\" \r\n                            @haveCheckedData=\"addDeviceCheck\" :activeTab=\"adddeviceActiveTab\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <template #footer>\r\n                        <el-button @click=\"addDeviceDialogOpen = false\">Cancel</el-button>\r\n                        <el-button class=\"ms-3\" :type=\"!hasNoDeviceChecked ? 'primary' : 'info'\" @click=\"addDeviceDialogOpen = false\" :disabled=\"hasNoDeviceChecked\">\r\n                            Go\r\n                        </el-button>\r\n                    </template>\r\n                </el-dialog>\r\n            </div>\r\n        </div>\r\n        <BigCard class=\"flex-row\" v-loading=\"!loadingEnd\" element-loading-background=\"#fff\">\r\n            <el-drawer v-model=\"treeDrawerOpen\" direction=\"btt\" :show-close=\"false\" :with-header=\"false\" class=\"tree_drawer px-3\" modal-class=\"tree_drawer_overlay\" size=\"80%\">\r\n                <el-scrollbar class=\"py-3 ps-2\">\r\n                    <el-tree :data=\"groupTreeData\" :props=\"defaultProps\" ref=\"treeRefMobile\" :highlight-current=\"true\" :expand-on-click-node=\"false\" :check-on-click-node=\"true\" node-key=\"slaveGroupId\">\r\n                        <template #default=\"{ node }\">\r\n                            <label class=\"d-flex align-items-center w-100\" @click=\"\r\n                                showNodeData(node, 'mobile');\r\n                            treeDrawerOpen = false;\r\n                            \">\r\n                                <font-awesome-icon icon=\"fa-solid fa-folder\" v-show=\"!node.expanded\" />\r\n                                <font-awesome-icon icon=\"fa-solid fa-folder-open\" v-show=\"node.expanded\" />\r\n                                <span class=\"ms-2\" :class=\"{\r\n                                    highLight:\r\n                                        currentNode.slaveGroupId ===\r\n                                        node.data.slaveGroupId,\r\n                                }\">{{ node.label }}</span>\r\n                            </label>\r\n                        </template>\r\n                    </el-tree>\r\n                </el-scrollbar>\r\n            </el-drawer>\r\n            <splitpanes>\r\n                <pane class=\"d-none d-sm-block\" min-size=\"20\" max-size=\"35\">\r\n                    <el-scrollbar class=\"py-3 ps-2\">\r\n                        <el-tree :data=\"groupTreeData\" :props=\"defaultProps\" ref=\"treeRef\" :highlight-current=\"true\" :expand-on-click-node=\"false\" :check-on-click-node=\"true\" node-key=\"slaveGroupId\">\r\n                            <template #default=\"{ node }\">\r\n                                <label class=\"d-flex align-items-center w-100\" @click=\"showNodeData(node)\">\r\n                                    <font-awesome-icon icon=\"fa-solid fa-folder\" v-show=\"!node.expanded\" />\r\n                                    <font-awesome-icon icon=\"fa-solid fa-folder-open\" v-show=\"node.expanded\" />\r\n                                    <span class=\"ms-2\" :class=\"{\r\n                                        highLight:\r\n                                            currentNode.slaveGroupId ===\r\n                                            node.data.slaveGroupId,\r\n                                    }\">{{ node.label }}</span>\r\n                                </label>\r\n                            </template>\r\n                        </el-tree>\r\n                    </el-scrollbar>\r\n                </pane>\r\n                <pane>\r\n                    <div class=\"layout-content\">\r\n                        <div class=\"d-none d-sm-flex p-2 border-b align-items-center\">\r\n                            <IconBtn iconClass=\"fa-solid fa-house\" />\r\n                            <div class=\"ms-2\">\r\n                                <el-breadcrumb :separator-icon=\"ArrowRight\">\r\n                                    <el-breadcrumb-item v-for=\"item in breadCrumbList\" :key=\"`path-${item}`\">\r\n                                        <a href=\"\" @click.prevent=\"showNodeData(item)\">{{ item.data.slaveGroupName }}</a>\r\n                                    </el-breadcrumb-item>\r\n                                </el-breadcrumb>\r\n                            </div>\r\n                        </div>\r\n                        <div class=\"layout-content\">\r\n                            <splitpanes horizontal>\r\n                                <pane v-if=\"deviceListActiveTab == 'MAIN'\">\r\n                                    <div class=\"layout-content\">\r\n                                        <div class=\"list-refresh border-b px-3 d-sm-none d-flex justify-content-end\">\r\n                                            <IconBtn iconClass=\"fa-solid fa-list\" active @click=\"\r\n                                                treeDrawerOpen = true\r\n                                                \" />\r\n                                            <IconBtn iconClass=\"fa-solid fa-refresh\" active />\r\n                                        </div>\r\n                                        <div class=\"row p-3 border-b d-none d-sm-flex\">\r\n                                            <div class=\"col-6\">\r\n                                                <span>群組名稱</span>\r\n                                            </div>\r\n                                            <div class=\"col-6\">\r\n                                                <span>環境設定</span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"layout-content\">\r\n                                            <el-scrollbar max-height=\"100%\">\r\n                                                <ul class=\"p-0\">\r\n                                                    <li class=\"row border-b py-2 py-sm-3 p-sm-2\" v-for=\"(item, index) in groupChildren\" :key=\"index\" @click=\"showNodeData(item)\">\r\n                                                        <div class=\"col-12 col-sm-6 d-flex align-items-center ps-4\">\r\n                                                            <font-awesome-icon class=\"active\" icon=\"fa-solid fa-folder\" size=\"2xl\" />\r\n                                                            <div class=\"ms-2 p-sm-0\">\r\n                                                                <span class=\"active\">{{ item.data.slaveGroupName }}</span>\r\n                                                                <div class=\"d-sm-none d-flex align-items-end\">\r\n                                                                    <span class=\"fs-7\">\r\n                                                                        環境設定:\r\n                                                                        <span class=\"fs-7\" v-if=\"item.data.profiles\">{{ item.data.profiles[0].assignedProfileName }}</span>\r\n                                                                    </span>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        <div class=\"col-sm-6 d-none d-sm-block\" v-if=\"item.data.profiles\">\r\n                                                            {{ item.data.profiles[0].assignedProfileName }}\r\n                                                        </div>\r\n                                                    </li>\r\n                                                </ul>\r\n                                                <div class=\"d-flex p-3 justify-content-center\" v-if=\"groupChildren.length ===\r\n                                                    0\r\n                                                    \">\r\n                                                    無群組資料\r\n                                                </div>\r\n                                            </el-scrollbar>\r\n                                        </div>\r\n                                    </div>\r\n                                </pane>\r\n                                <pane>\r\n                                    <div class=\"layout-content\">\r\n                                        <div class=\"header border-b p-3 d-flex align-items-center justify-content-between\" v-if=\"deviceListActiveTab == 'MAIN'\">\r\n                                            <div class=\"operate d-flex align-items-center flex-grow-1\">\r\n                                                <div class=\"\" :style=\"{ color: devicesChecked.length == 0 ? '#d6d6d6' : '' }\">\r\n                                                    <font-awesome-icon icon=\"fa-solid fa-folder\" />\r\n                                                    <span class=\"ms-2\">移動</span>\r\n                                                </div>\r\n                                                <div class=\"ms-4\" :style=\"{ color: devicesChecked.length == 0 ? '#d6d6d6' : '' }\">\r\n                                                    <font-awesome-icon icon=\"fa-solid fa-trash\" />\r\n                                                    <span class=\"ms-2\">刪除</span>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"layout-content\">\r\n                                            <InefiVirtualTable ref=\"deviceListTable\" :item-size=\"50\" :table-props=\"deviceTableProps\" :items=\"deviceResult\" key-field=\"deviceId\" \r\n                                            :showCheckBox=\"deviceListActiveTab == 'MAIN'\" \r\n                                            tooltipTrigger=\"hover\" :tooltipContent=\"deviceTooltipContent\" tooltipRef=\"aliasName\" \r\n                                            @haveCheckedData=\"getDeviceCheckedData\" @noCheckedData=\"devicesChecked = []\" \r\n                                            table-name=\"deviceListTable\" :columnsExcept=\"columnsExcept\" :activeTab=\"deviceListActiveTab\" \r\n                                            :customColumns=\"false\" :filter=\"deviceListActiveTab == 'UNASSIGNED'\" :filter-options=\"filterOptions\" \r\n                                            @filt=\"getFilterParam\" :searchShow=\"false\">\r\n                                                <template #status=\"{ item }\">\r\n                                                    <div class=\"d-flex w-100 align-items-center justify-content-center\">\r\n                                                        <div class=\"status_dot\" :class=\"{\r\n                                                            err: item.healthStatus === 'ERROR',\r\n                                                            good: item.healthStatus === 'GOOD'\r\n                                                        }\"></div>\r\n                                                    </div>\r\n                                                </template>\r\n                                                <template #label=\"{ item }\">\r\n                                                    <div class=\"label\" :id=\"item.deviceId\" @dblclick=\"canEdit('click', item.deviceId)\" \r\n                                                    @touchstart.passive=\"thisTouchStart(item.deviceId)\" @touchmove.passive=\"clearTouchTimer\" @touchend.passive=\"clearTouchTimer\">\r\n                                                        <span class=\"alias_name\">{{ item.aliasName }}</span>\r\n                                                        <span class=\"alias_input\">\r\n                                                            <el-input v-model=\"item.aliasName\" @blur=\"canEdit('blur')\" size=\"small\" />\r\n                                                        </span>\r\n                                                    </div>\r\n                                                </template>\r\n                                                <template #enroll=\"{ item }\">\r\n                                                    <div class=\"enrolled_status py-1 px-2\" :class=\"{ enrolled: item.deviceState === 'REGISTERED' }\">\r\n                                                        <div class=\"dot me-2\"></div>\r\n                                                        <span>{{ item.deviceState === \"REGISTERED\" ? \"ENROLLED\" : \"INACTIVE\" }}</span>\r\n                                                    </div>\r\n                                                </template>\r\n                                            </InefiVirtualTable>\r\n                                        </div>\r\n                                    </div>\r\n                                </pane>\r\n                            </splitpanes>\r\n                        </div>\r\n                    </div>\r\n                </pane>\r\n            </splitpanes>\r\n\r\n        </BigCard>\r\n    </div>\r\n</template>\r\n<style lang=\"scss\">\r\n@import \"@/assets/scss/all.scss\";\r\n\r\n.group_function_bar {\r\n    background-color: #fff;\r\n    border-bottom: 3px solid #eee;\r\n\r\n    .el-scrollbar {\r\n        flex-grow: 1;\r\n    }\r\n\r\n    .el-scrollbar__view {\r\n        height: 100%;\r\n        display: flex;\r\n        align-items: center;\r\n    }\r\n}\r\n\r\n@include bstrp(sm) {\r\n    .group_function_bar {\r\n        background-color: transparent;\r\n        border-bottom: none;\r\n    }\r\n}\r\n\r\n.addDevice_dialog-body {\r\n    min-height: 350px;\r\n    max-height: calc(90vh - 150px);\r\n}\r\n\r\n.custom-tabs {\r\n    display: flex;\r\n    margin: 0;\r\n    padding-left: 0;\r\n}\r\n\r\n.custom-tab {\r\n    padding: 10px 20px;\r\n    font-size: 24px;\r\n    list-style: none;\r\n    cursor: pointer;\r\n    position: relative;\r\n\r\n    span {\r\n        text-transform: uppercase;\r\n    }\r\n\r\n    &::before {\r\n        content: '';\r\n        display: block;\r\n        width: 100%;\r\n        height: 4px;\r\n        position: absolute;\r\n        bottom: 0;\r\n        left: 0;\r\n    }\r\n\r\n    &.active {\r\n        &::before {\r\n            background-color: $primary;\r\n        }\r\n    }\r\n}\r\n\r\n.adddevice-tab__number {\r\n    background-color: #efefef;\r\n    border-radius: 4px;\r\n}\r\n\r\n.search-input {\r\n    width: 0;\r\n    overflow: hidden;\r\n\r\n    // transition: 0.5s;\r\n    &.open {\r\n        width: 100%;\r\n        overflow: auto;\r\n    }\r\n}\r\n\r\n.el-input-group__prepend {\r\n    background-color: #fff;\r\n    color: #aaa;\r\n}\r\n\r\n@include bstrp(sm) {\r\n    .search-input {\r\n        width: 350px;\r\n        // max-width: 350px;\r\n        min-width: 250px;\r\n\r\n        &.open {\r\n            width: 350px;\r\n            // max-width: 350px;\r\n            min-width: 250px;\r\n        }\r\n    }\r\n}\r\n\r\n.bread_crumb {\r\n    .el-breadcrumb {\r\n        width: 100%;\r\n        display: flex;\r\n        flex-wrap: nowrap;\r\n        align-items: center;\r\n    }\r\n}\r\n\r\n.tree_drawer_overlay {\r\n    background-color: rbga(100, 100, 100, 0.1);\r\n}\r\n\r\n.tree_drawer {\r\n    background-color: transparent;\r\n    box-shadow: 0px 0px 0px 0px transparent;\r\n    overflow: visible;\r\n    height: 80%;\r\n\r\n    .el-drawer__body {\r\n        background-color: #fff;\r\n        border-top-left-radius: 30px;\r\n        border-top-right-radius: 30px;\r\n        box-shadow: 5px 0px 8px 5px rgba(90, 90, 90, 0.1);\r\n    }\r\n}\r\n\r\n.highLight {\r\n    font-weight: 700;\r\n    color: $primary;\r\n    cursor: pointer;\r\n}\r\n\r\n.status_dot {\r\n    width: 10px;\r\n    height: 10px;\r\n    border-radius: 50%;\r\n\r\n    &.err {\r\n        background-color: $danger;\r\n    }\r\n\r\n    &.good {\r\n        background-color: $success;\r\n    }\r\n\r\n}\r\n\r\n.label {\r\n    width: 100%;\r\n    min-height: 24px;\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    .alias_name {\r\n        display: block;\r\n    }\r\n\r\n    .alias_input {\r\n        display: none;\r\n    }\r\n\r\n    &.can_edit {\r\n        .alias_name {\r\n            display: none;\r\n        }\r\n\r\n        .alias_input {\r\n            display: block;\r\n        }\r\n    }\r\n}\r\n\r\n.enrolled_status {\r\n    border-radius: 50px;\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: #eee;\r\n    width: fit-content;\r\n\r\n    span {\r\n        @extend .fw-bold;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .dot {\r\n        width: 6px;\r\n        height: 6px;\r\n        border-radius: 50%;\r\n        background-color: #aaa;\r\n    }\r\n\r\n    &.enrolled {\r\n        background-color: lighten($primary, 30%);\r\n\r\n        span {\r\n            color: $primary;\r\n        }\r\n\r\n        .dot {\r\n            background-color: $primary;\r\n        }\r\n    }\r\n}\r\n\r\n.bigcard-component {\r\n    .splitpanes__splitter {\r\n        background-color: #eee;\r\n        position: relative;\r\n\r\n        &::before {\r\n            content: \"\";\r\n            display: block;\r\n            position: absolute;\r\n            left: 0;\r\n            top: 0;\r\n            transition: opacity 0.4s;\r\n            background-color: rgba(0, 0, 0, 0.3);\r\n            opacity: 0;\r\n            z-index: 0;\r\n        }\r\n\r\n        &:hover {\r\n            &::before {\r\n                opacity: 1;\r\n            }\r\n        }\r\n    }\r\n\r\n    .splitpanes--vertical>.splitpanes__splitter {\r\n        min-width: 6px;\r\n        border-right: 1px solid #ccc;\r\n        border-left: 1px solid #ccc;\r\n\r\n        &::before {\r\n            left: -4px;\r\n            right: -4px;\r\n            height: 100%;\r\n            width: 230%;\r\n        }\r\n    }\r\n\r\n    .splitpanes--horizontal>.splitpanes__splitter {\r\n        min-height: 12px;\r\n        border-top: 1px solid #ccc;\r\n        border-bottom: 1px solid #ccc;\r\n\r\n        &::before {\r\n            top: -4px;\r\n            bottom: -4px;\r\n            width: 100%;\r\n            height: 230%;\r\n        }\r\n    }\r\n\r\n    .splitpanes--vertical>.splitpanes__splitter {\r\n        display: none;\r\n    }\r\n}\r\n\r\n@include bstrp(sm) {\r\n    .bigcard-component {\r\n        .splitpanes--vertical>.splitpanes__splitter {\r\n            display: block;\r\n        }\r\n\r\n        .splitpanes--horizontal>.splitpanes__splitter {\r\n            min-height: 6px;\r\n        }\r\n    }\r\n}\r\n</style>\r\n","import script from \"./GroupView.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./GroupView.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./GroupView.vue?vue&type=style&index=0&id=e3065b5e&lang=scss\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["class","_createElementBlock","_hoisted_1","_renderSlot","_ctx","$slots","script","__exports__","render","M","name","emits","props","horizontal","type","Boolean","pushOtherPanes","default","dblClickSplitter","rtl","firstSplitter","provide","requestUpdate","this","onPaneAdd","onPaneRemove","onPaneClick","data","container","ready","panes","touch","mouseDown","dragging","activeSplitter","splitterTaps","splitter","timeoutId","computed","panesCount","length","indexedPanes","reduce","e","i","id","methods","updatePaneComponents","forEach","update","size","bindEvents","document","addEventListener","onMouseMove","passive","onMouseUp","window","unbindEvents","removeEventListener","onMouseDown","preventDefault","calculatePanesSize","getCurrentMouseDrag","$emit","map","min","max","setTimeout","onSplitterClick","clearTimeout","onSplitterDblClick","s","n","t","getBoundingClientRect","clientX","clientY","touches","x","left","y","top","getCurrentDragPercentage","prevPanesSize","sumPrevPanesSize","nextPanesSize","sumNextPanesSize","prevReachedMinPanes","nextReachedMinPanes","a","Math","r","o","h","l","u","d","doPushOtherPanes","sums","panesToResize","findPrevExpandedPane","index","findNextExpandedPane","reverse","find","checkSplitpanesNodes","Array","from","children","classList","contains","parentNode","removeChild","console","warn","addSplitter","createElement","add","onmousedown","ontouchstart","onclick","ondblclick","insertBefore","removeSplitter","redoSplitters","className","includes","target","_","uid","Object","entries","$el","some","parseFloat","minSize","maxSize","splice","isNaN","givenSize","$nextTick","resetPaneSizes","addedPane","findIndex","removedPane","removed","equalizeAfterAddOrRemove","equalize","initialPanesSizing","push","readjustSizes","abs","watch","deep","immediate","handler","querySelectorAll","beforeUnmount","mounted","$refs","ref","S","__vccOpts","inject","Number","String","style","sizeNumber","minSizeNumber","maxSizeNumber","P","onClick","g","touchTime","searchType","searchText","searchInputFocus","searchInputOpen","treeDrawerOpen","groupTreeData","url","getTreeData","async","res","axios","get","inefiData","value","orgnizeTreeData","result","err","log","item","slaveGroupName","masterGroupName","slaveGroupUUID","masterGroupUUID","slaveGroupId","masterGroupId","onMounted","defaultProps","reactive","label","treeRef","treeRefMobile","group","store","state","groupHealth","checkSlaveGroup","node","getNode","showNodeData","ElMessage","message","breadCrumbList","groupChildren","deviceResult","currentNode","clearResult","triggerIsDevice","nodeSlaveGroupId","device","breadCrumb","pushBreadcrumb","parent","level","setGroupChildren","childNodes","child","devices","expandTree","expanded","windowWidth","scrollbarToRight","searchResult","searchGroupData","treeData","parentItem","results","isArray","items","filter","deviceName","toLowerCase","Items","subgroup","subResult","breadCrumbScrollbar","nextTick","scrollWidth","wrapRef","scrollShowWidth","clientWidth","scrollLeft","scrollTo","deviceTableProps","columnName","dataKey","slotName","width","minWidth","filterOptions","typeName","options","valName","deviceTooltipContent","columnsExcept","tab","except","deviceListActiveTab","getFilterParam","param","devicesChecked","deviceListTable","getDeviceCheckedData","getCheckedData","canEdit","event","triggerDeviceDOM","getElementById","deviceDOMs","DOM","remove","touchTimer","thisTouchStart","touchstart","newVal","clearTouchTimer","clearChecked","addDeviceDialogOpen","searchAddDeviceText","activeTab","adddeviceActiveTab","addDeviceTabs","checkedUnassignedList","checkedInactiveList","hasNoDeviceChecked","addAmount","addDeviceAllResult","deviceTable","addDeviceCheck","addDeviceAllOrganize","groupdata","allResult","deewp","addDeviceTableProps","loadingEnd","innerWidth","mobileSize","watchWindowWidth","isMoblieGroupChildren","onBeforeUnmount","searchPopoverWidth"],"sourceRoot":""}